{"remainingRequest":"E:\\ApiAdmin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\ApiAdmin\\src\\view\\wiki\\list.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\ApiAdmin\\src\\view\\wiki\\list.vue","mtime":1635783329031},{"path":"E:\\ApiAdmin\\node_modules\\babel-loader\\lib\\index.js","mtime":1635783561745},{"path":"E:\\ApiAdmin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1635783567026},{"path":"E:\\ApiAdmin\\node_modules\\vue-loader\\lib\\index.js","mtime":1635783560295}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport './list.less'\r\nimport { apiGroup, detail, logout } from '@/api/wiki'\r\nimport { setToken } from '@/libs/util'\r\nimport ABackTop from '@/components/main/components/a-back-top'\r\n\r\nexport default {\r\n  name: 'wiki',\r\n  components: {\r\n    ABackTop\r\n  },\r\n  data () {\r\n    return {\r\n      show_detail: false,\r\n      show_loading: false,\r\n      app_id: sessionStorage.getItem('ApiAdmin_AppInfo'),\r\n      code: '',\r\n      url: '',\r\n      groupInfo: [],\r\n      header_columns: [\r\n        {\r\n          title: '参数名称',\r\n          key: 'field_name'\r\n        },\r\n        {\r\n          title: '类型',\r\n          render: (h, params) => {\r\n            return h('Tag', {\r\n              props: {\r\n                'color': 'blue'\r\n              }\r\n            }, this.detail_info.dataType[params.row.data_type])\r\n          }\r\n        },\r\n        {\r\n          title: '字段状态',\r\n          render: (h, params) => {\r\n            if (params.row.is_must === 1) {\r\n              return h('Tag', {\r\n                props: {\r\n                  'color': 'red'\r\n                }\r\n              }, '复杂认证')\r\n            } else {\r\n              return h('Tag', {\r\n                props: {\r\n                  'color': 'blue'\r\n                }\r\n              }, '简易认证')\r\n            }\r\n          }\r\n        },\r\n        {\r\n          title: '字段说明',\r\n          key: 'info',\r\n          width: 290,\r\n          render: (h, params) => {\r\n            let text = params.row.info.substring(0, 20) + '...'\r\n            if (params.row.info.length >= 20) {\r\n              return h('Tooltip', {\r\n                props: {\r\n                  transfer: true,\r\n                  maxWidth: 200\r\n                }\r\n              }, [\r\n                text,\r\n                h('div', {\r\n                  slot: 'content',\r\n                  style: {\r\n                    whiteSpace: 'normal',\r\n                    wordBreak: 'break-all',\r\n                    wordWrap: 'break-word'\r\n                  }\r\n                }, params.row.info)\r\n              ])\r\n            } else {\r\n              return h('span', params.row.info)\r\n            }\r\n          }\r\n        }\r\n      ],\r\n      request_columns: [\r\n        {\r\n          title: '字段名称',\r\n          key: 'field_name'\r\n        },\r\n        {\r\n          title: '类型',\r\n          width: 100,\r\n          render: (h, params) => {\r\n            return h('Tag', {\r\n              props: {\r\n                'color': 'blue'\r\n              }\r\n            }, this.detail_info.dataType[params.row.data_type])\r\n          }\r\n        },\r\n        {\r\n          title: '字段属性',\r\n          width: 100,\r\n          render: (h, params) => {\r\n            if (params.row.is_must === 1) {\r\n              return h('Tag', {\r\n                props: {\r\n                  'color': 'red'\r\n                }\r\n              }, '必填')\r\n            } else {\r\n              return h('Tag', {\r\n                props: {\r\n                  'color': 'orange'\r\n                }\r\n              }, '选填')\r\n            }\r\n          }\r\n        },\r\n        {\r\n          title: '默认值',\r\n          key: 'default'\r\n        },\r\n        {\r\n          title: '字段说明',\r\n          key: 'info',\r\n          width: 290,\r\n          render: (h, params) => {\r\n            let text = params.row.info.substring(0, 20) + '...'\r\n            if (params.row.info.length >= 20) {\r\n              return h('Tooltip', {\r\n                props: {\r\n                  transfer: true,\r\n                  maxWidth: 200\r\n                }\r\n              }, [\r\n                text,\r\n                h('div', {\r\n                  slot: 'content',\r\n                  style: {\r\n                    whiteSpace: 'normal',\r\n                    wordBreak: 'break-all',\r\n                    wordWrap: 'break-word'\r\n                  }\r\n                }, params.row.info)\r\n              ])\r\n            } else {\r\n              return h('span', params.row.info)\r\n            }\r\n          }\r\n        }\r\n      ],\r\n      response_columns: [\r\n        {\r\n          title: '字段名称',\r\n          key: 'show_name'\r\n        },\r\n        {\r\n          title: '类型',\r\n          render: (h, params) => {\r\n            return h('Tag', {\r\n              props: {\r\n                'color': 'blue'\r\n              }\r\n            }, this.detail_info.dataType[params.row.data_type])\r\n          }\r\n        },\r\n        {\r\n          title: '字段说明',\r\n          key: 'info',\r\n          width: 290,\r\n          render: (h, params) => {\r\n            let text = params.row.info.substring(0, 20) + '...'\r\n            if (params.row.info.length >= 20) {\r\n              return h('Tooltip', {\r\n                props: {\r\n                  transfer: true,\r\n                  maxWidth: 200\r\n                }\r\n              }, [\r\n                text,\r\n                h('div', {\r\n                  slot: 'content',\r\n                  style: {\r\n                    whiteSpace: 'normal',\r\n                    wordBreak: 'break-all',\r\n                    wordWrap: 'break-word'\r\n                  }\r\n                }, params.row.info)\r\n              ])\r\n            } else {\r\n              return h('span', params.row.info)\r\n            }\r\n          }\r\n        }\r\n      ],\r\n      detail_info: {},\r\n      api_detail: {},\r\n      header_data: [],\r\n      co: ''\r\n    }\r\n  },\r\n  created () {\r\n    this.getList()\r\n  },\r\n  methods: {\r\n    logout () {\r\n      let vm = this\r\n      logout().then(response => {\r\n        vm.$Message.success(response.data.msg)\r\n        setToken('')\r\n        sessionStorage.removeItem('ApiAdmin_AppInfo')\r\n        vm.$router.push({\r\n          name: 'wiki_login'\r\n        })\r\n      })\r\n    },\r\n    getList () {\r\n      let vm = this\r\n      apiGroup().then(response => {\r\n        vm.groupInfo = response.data.data.data\r\n        vm.co = response.data.data.co\r\n      })\r\n    },\r\n    closeDrawer () {\r\n      this.getList()\r\n    },\r\n    showApiDetail (hash) {\r\n      let vm = this\r\n      vm.show_loading = true\r\n      detail({\r\n        hash: hash\r\n      }).then(response => {\r\n        let res = response.data.data\r\n        vm.detail_info = res\r\n        vm.show_detail = true\r\n        vm.show_loading = false\r\n        vm.url = res.url\r\n        vm.api_detail = res.apiList\r\n        if (res.apiList.return_str) {\r\n          vm.code = JSON.parse(res.apiList.return_str)\r\n        }\r\n        vm.header_data = [{\r\n          is_must: res.apiList.access_token,\r\n          field_name: 'Access-Token',\r\n          info: 'APP认证秘钥【请在Header头里面传递】',\r\n          data_type: 2\r\n        }]\r\n      })\r\n    }\r\n  }\r\n}\r\n",null]}