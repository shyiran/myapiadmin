{"remainingRequest":"E:\\ApiAdmin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\ApiAdmin\\src\\view\\interface\\request.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\ApiAdmin\\src\\view\\interface\\request.vue","mtime":1635783329011},{"path":"E:\\ApiAdmin\\node_modules\\babel-loader\\lib\\index.js","mtime":1635783561745},{"path":"E:\\ApiAdmin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1635783567026},{"path":"E:\\ApiAdmin\\node_modules\\vue-loader\\lib\\index.js","mtime":1635783560295}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { getRequest, add, edit, del } from '@/api/fields'\r\n\r\nconst editButton = (vm, h, currentRow, index) => {\r\n  return h('Button', {\r\n    props: {\r\n      type: 'primary'\r\n    },\r\n    style: {\r\n      margin: '0 5px'\r\n    },\r\n    on: {\r\n      'click': () => {\r\n        vm.formItem.id = currentRow.id\r\n        vm.formItem.field_name = currentRow.field_name\r\n        vm.formItem.data_type = currentRow.data_type.toString()\r\n        vm.formItem.defaults = currentRow.default\r\n        vm.formItem.range = currentRow.range\r\n        vm.formItem.is_must = currentRow.is_must.toString()\r\n        vm.formItem.info = currentRow.info\r\n        vm.modalSetting.show = true\r\n        vm.modalSetting.index = index\r\n      }\r\n    }\r\n  }, vm.$t('edit_button'))\r\n}\r\nconst deleteButton = (vm, h, currentRow, index) => {\r\n  return h('Poptip', {\r\n    props: {\r\n      confirm: true,\r\n      title: '您确定要删除这条数据吗? ',\r\n      transfer: true\r\n    },\r\n    on: {\r\n      'on-ok': () => {\r\n        del(currentRow.id).then(response => {\r\n          currentRow.loading = false\r\n          vm.tableData.splice(index, 1)\r\n          vm.$Message.success(response.data.msg)\r\n        })\r\n      }\r\n    }\r\n  }, [\r\n    h('Button', {\r\n      style: {\r\n        margin: '0 5px'\r\n      },\r\n      props: {\r\n        type: 'error',\r\n        placement: 'top',\r\n        loading: currentRow.isDeleting\r\n      }\r\n    }, vm.$t('delete_button'))\r\n  ])\r\n}\r\nexport default {\r\n  name: 'interface_request',\r\n  data () {\r\n    return {\r\n      hash: '',\r\n      columnsList: [\r\n        {\r\n          title: '序号',\r\n          type: 'index',\r\n          width: 65,\r\n          align: 'center'\r\n        },\r\n        {\r\n          title: '字段名称',\r\n          align: 'left',\r\n          key: 'show_name',\r\n          width: 200\r\n        },\r\n        {\r\n          title: '数据类型',\r\n          align: 'center',\r\n          width: 100,\r\n          render: (h, params) => {\r\n            let type = params.row.data_type\r\n            return h('Tag', {\r\n              attrs: {\r\n                color: 'primary'\r\n              }\r\n            }, this.tableShow.dataType[type])\r\n          }\r\n        },\r\n        {\r\n          title: '是否必须',\r\n          align: 'center',\r\n          width: 100,\r\n          render: (h, params) => {\r\n            if (params.row.is_must === 1) {\r\n              return h('Tag', {\r\n                attrs: {\r\n                  color: 'error'\r\n                }\r\n              }, '必填')\r\n            } else {\r\n              return h('Tag', {\r\n                attrs: {\r\n                  color: 'primary'\r\n                }\r\n              }, '可选')\r\n            }\r\n          }\r\n        },\r\n        {\r\n          title: '默认值',\r\n          align: 'center',\r\n          key: 'default',\r\n          width: 160\r\n        },\r\n        {\r\n          title: '字段说明',\r\n          align: 'left',\r\n          key: 'info'\r\n        },\r\n        {\r\n          title: '操作',\r\n          align: 'center',\r\n          width: 205,\r\n          render: (h, params) => {\r\n            return h('div', [\r\n              editButton(this, h, params.row, params.index),\r\n              deleteButton(this, h, params.row, params.index)\r\n            ])\r\n          }\r\n        }\r\n      ],\r\n      tableData: [],\r\n      tableShow: {\r\n        currentPage: 1,\r\n        pageSize: 10,\r\n        listCount: 0,\r\n        dataType: {}\r\n      },\r\n      apiInfo: {},\r\n      modalSetting: {\r\n        show: false,\r\n        loading: false,\r\n        index: 0\r\n      },\r\n      formItem: {\r\n        field_name: '',\r\n        data_type: '2',\r\n        defaults: '',\r\n        range: '',\r\n        is_must: '1',\r\n        info: '',\r\n        type: 0,\r\n        id: 0\r\n      },\r\n      ruleValidate: {\r\n        field_name: [\r\n          { required: true, message: '字段名称不能为空', trigger: 'blur' }\r\n        ]\r\n      },\r\n      listLoading: false\r\n    }\r\n  },\r\n  created () {\r\n    this.hash = this.$route.params.hash.toString()\r\n    this.getList()\r\n  },\r\n  activated () {\r\n    this.hash = this.$route.params.hash.toString()\r\n    this.getList()\r\n  },\r\n  methods: {\r\n    alertAdd () {\r\n      this.modalSetting.show = true\r\n    },\r\n    submit () {\r\n      this.formItem.hash = this.hash\r\n      let vm = this\r\n      this.$refs['myForm'].validate((valid) => {\r\n        if (valid) {\r\n          vm.modalSetting.loading = true\r\n          if (vm.formItem.id === 0) {\r\n            add(vm.formItem).then(response => {\r\n              vm.$Message.success(response.data.msg)\r\n              vm.getList()\r\n              vm.cancel()\r\n            }).catch(() => {\r\n              vm.modalSetting.loading = false\r\n            })\r\n          } else {\r\n            edit(vm.formItem).then(response => {\r\n              vm.$Message.success(response.data.msg)\r\n              vm.getList()\r\n              vm.cancel()\r\n            }).catch(() => {\r\n              vm.modalSetting.loading = false\r\n            })\r\n          }\r\n        }\r\n      })\r\n    },\r\n    cancel () {\r\n      this.modalSetting.show = false\r\n    },\r\n    changePage (page) {\r\n      this.tableShow.currentPage = page\r\n      this.getList()\r\n    },\r\n    changeSize (size) {\r\n      this.tableShow.pageSize = size\r\n      this.getList()\r\n    },\r\n    search () {\r\n      this.tableShow.currentPage = 1\r\n      this.getList()\r\n    },\r\n    getList () {\r\n      let vm = this\r\n      vm.listLoading = true\r\n      getRequest({\r\n        page: vm.tableShow.currentPage,\r\n        size: vm.tableShow.pageSize,\r\n        hash: vm.hash\r\n      }).then(response => {\r\n        vm.tableData = response.data.data.list\r\n        vm.tableShow.listCount = response.data.data.count\r\n        vm.tableShow.dataType = response.data.data.dataType\r\n        vm.apiInfo = response.data.data.apiInfo\r\n        vm.listLoading = false\r\n      })\r\n    },\r\n    doCancel (data) {\r\n      if (!data) {\r\n        this.formItem.id = 0\r\n        this.formItem.defaults = ''\r\n        this.formItem.isMust = '1'\r\n        this.$refs['myForm'].resetFields()\r\n        this.modalSetting.loading = false\r\n        this.modalSetting.index = 0\r\n      }\r\n    }\r\n  }\r\n}\r\n",null]}