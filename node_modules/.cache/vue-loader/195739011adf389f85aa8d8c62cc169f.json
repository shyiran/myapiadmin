{"remainingRequest":"E:\\ApiAdmin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\ApiAdmin\\src\\components\\main\\components\\side-menu\\side-menu.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\ApiAdmin\\src\\components\\main\\components\\side-menu\\side-menu.vue","mtime":1635783328965},{"path":"E:\\ApiAdmin\\node_modules\\babel-loader\\lib\\index.js","mtime":1635783561745},{"path":"E:\\ApiAdmin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1635783567026},{"path":"E:\\ApiAdmin\\node_modules\\vue-loader\\lib\\index.js","mtime":1635783560295}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport SideMenuItem from './side-menu-item.vue'\r\nimport CollapsedMenu from './collapsed-menu.vue'\r\nimport { getUnion } from '@/libs/tools'\r\nimport mixin from './mixin'\r\n\r\nexport default {\r\n  name: 'SideMenu',\r\n  mixins: [ mixin ],\r\n  components: {\r\n    SideMenuItem,\r\n    CollapsedMenu\r\n  },\r\n  props: {\r\n    menuList: {\r\n      type: Array,\r\n      default () {\r\n        return []\r\n      }\r\n    },\r\n    collapsed: {\r\n      type: Boolean\r\n    },\r\n    theme: {\r\n      type: String,\r\n      default: 'dark'\r\n    },\r\n    rootIconSize: {\r\n      type: Number,\r\n      default: 20\r\n    },\r\n    iconSize: {\r\n      type: Number,\r\n      default: 16\r\n    },\r\n    accordion: Boolean,\r\n    activeName: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    openNames: {\r\n      type: Array,\r\n      default: () => []\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      openedNames: []\r\n    }\r\n  },\r\n  methods: {\r\n    handleSelect (name) {\r\n      this.$emit('on-select', name)\r\n    },\r\n    getOpenedNamesByActiveName (name) {\r\n      return this.$route.matched.map(item => item.name).filter(item => item !== name)\r\n    },\r\n    updateOpenName (name) {\r\n      if (name === 'home') this.openedNames = []\r\n      else this.openedNames = this.getOpenedNamesByActiveName(name)\r\n    }\r\n  },\r\n  computed: {\r\n    textColor () {\r\n      return this.theme === 'dark' ? '#fff' : '#495060'\r\n    }\r\n  },\r\n  watch: {\r\n    activeName (name) {\r\n      if (this.accordion) this.openedNames = this.getOpenedNamesByActiveName(name)\r\n      else this.openedNames = getUnion(this.openedNames, this.getOpenedNamesByActiveName(name))\r\n    },\r\n    openNames (newNames) {\r\n      this.openedNames = newNames\r\n    },\r\n    openedNames () {\r\n      this.$nextTick(() => {\r\n        this.$refs.menu.updateOpened()\r\n      })\r\n    }\r\n  },\r\n  mounted () {\r\n    this.openedNames = getUnion(this.openedNames, this.getOpenedNamesByActiveName(name))\r\n  }\r\n}\r\n",null]}