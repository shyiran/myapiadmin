{"remainingRequest":"E:\\ApiAdmin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\ApiAdmin\\src\\view\\interface\\response.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\ApiAdmin\\src\\view\\interface\\response.vue","mtime":1635783329012},{"path":"E:\\ApiAdmin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1635783567026},{"path":"E:\\ApiAdmin\\node_modules\\babel-loader\\lib\\index.js","mtime":1635783561745},{"path":"E:\\ApiAdmin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1635783567026},{"path":"E:\\ApiAdmin\\node_modules\\vue-loader\\lib\\index.js","mtime":1635783560295}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { getResponse, edit, del, upJson } from '@/api/fields'\r\n\r\nconst editButton = (vm, h, currentRow, index) => {\r\n  return h('Button', {\r\n    props: {\r\n      type: 'primary'\r\n    },\r\n    style: {\r\n      margin: '0 5px'\r\n    },\r\n    on: {\r\n      'click': () => {\r\n        vm.formItem.id = currentRow.id\r\n        vm.formItem.field_name = currentRow.show_name\r\n        vm.formItem.data_type = currentRow.data_type.toString()\r\n        vm.formItem.defaults = currentRow.default\r\n        vm.formItem.range = currentRow.range\r\n        vm.formItem.is_must = currentRow.is_must.toString()\r\n        vm.formItem.info = currentRow.info\r\n        vm.modalSetting.show = true\r\n        vm.modalSetting.index = index\r\n      }\r\n    }\r\n  }, vm.$t('edit_button'))\r\n}\r\nconst deleteButton = (vm, h, currentRow, index) => {\r\n  return h('Poptip', {\r\n    props: {\r\n      confirm: true,\r\n      title: '您确定要删除这条数据吗? ',\r\n      transfer: true\r\n    },\r\n    on: {\r\n      'on-ok': () => {\r\n        del(currentRow.id).then(response => {\r\n          currentRow.loading = false\r\n          vm.tableData.splice(index, 1)\r\n          vm.$Message.success(response.data.msg)\r\n        })\r\n      }\r\n    }\r\n  }, [\r\n    h('Button', {\r\n      style: {\r\n        margin: '0 5px'\r\n      },\r\n      props: {\r\n        type: 'error',\r\n        placement: 'top',\r\n        loading: currentRow.isDeleting\r\n      }\r\n    }, vm.$t('delete_button'))\r\n  ])\r\n}\r\nexport default {\r\n  name: 'interface_response',\r\n  data () {\r\n    return {\r\n      hash: '',\r\n      columnsList: [\r\n        {\r\n          title: '序号',\r\n          type: 'index',\r\n          width: 65,\r\n          align: 'center'\r\n        },\r\n        {\r\n          title: '字段名称',\r\n          align: 'left',\r\n          key: 'show_name',\r\n          width: 200\r\n        },\r\n        {\r\n          title: '数据类型',\r\n          align: 'center',\r\n          width: 100,\r\n          render: (h, params) => {\r\n            let type = params.row.data_type\r\n            return h('Tag', {\r\n              attrs: {\r\n                color: 'primary'\r\n              }\r\n            }, this.tableShow.dataType[type])\r\n          }\r\n        },\r\n        {\r\n          title: '是否必须',\r\n          align: 'center',\r\n          width: 100,\r\n          render: (h, params) => {\r\n            if (params.row.is_must === 1) {\r\n              return h('Tag', {\r\n                attrs: {\r\n                  color: 'error'\r\n                }\r\n              }, '必填')\r\n            } else {\r\n              return h('Tag', {\r\n                attrs: {\r\n                  color: 'primary'\r\n                }\r\n              }, '可选')\r\n            }\r\n          }\r\n        },\r\n        {\r\n          title: '默认值',\r\n          align: 'center',\r\n          key: 'default',\r\n          width: 160\r\n        },\r\n        {\r\n          title: '字段说明',\r\n          align: 'left',\r\n          key: 'info'\r\n        },\r\n        {\r\n          title: '操作',\r\n          align: 'center',\r\n          width: 205,\r\n          render: (h, params) => {\r\n            return h('div', [\r\n              editButton(this, h, params.row, params.index),\r\n              deleteButton(this, h, params.row, params.index)\r\n            ])\r\n          }\r\n        }\r\n      ],\r\n      tableData: [],\r\n      tableShow: {\r\n        currentPage: 1,\r\n        pageSize: 10,\r\n        listCount: 0,\r\n        dataType: {}\r\n      },\r\n      apiInfo: {},\r\n      modalSetting: {\r\n        show: false,\r\n        loading: false,\r\n        index: 0\r\n      },\r\n      uploadModal: {\r\n        show: false,\r\n        loading: false,\r\n        index: 0\r\n      },\r\n      formItem: {\r\n        field_name: '',\r\n        data_type: '2',\r\n        defaults: '',\r\n        range: '',\r\n        is_must: '1',\r\n        info: '',\r\n        type: 1,\r\n        id: 0\r\n      },\r\n      uploadItem: {\r\n        jsonStr: '',\r\n        type: 1\r\n      },\r\n      ruleValidate: {\r\n        field_name: [\r\n          { required: true, message: '字段名称不能为空', trigger: 'blur' }\r\n        ]\r\n      },\r\n      uploadValidate: {\r\n        jsonStr: [\r\n          { required: true, message: '数据模板不能为空', trigger: 'blur' }\r\n        ]\r\n      },\r\n      listLoading: false\r\n    }\r\n  },\r\n  created () {\r\n    this.hash = this.$route.params.hash.toString()\r\n    this.getList()\r\n  },\r\n  activated () {\r\n    this.hash = this.$route.params.hash.toString()\r\n    this.getList()\r\n  },\r\n  methods: {\r\n    alertUpload () {\r\n      this.uploadModal.show = true\r\n    },\r\n    submit () {\r\n      this.formItem.hash = this.hash\r\n      let vm = this\r\n      this.$refs['myForm'].validate((valid) => {\r\n        if (valid) {\r\n          vm.modalSetting.loading = true\r\n          edit(vm.formItem).then(response => {\r\n            vm.$Message.success(response.data.msg)\r\n            vm.getList()\r\n            vm.cancel()\r\n          }).catch(() => {\r\n            vm.modalSetting.loading = false\r\n          })\r\n        }\r\n      })\r\n    },\r\n    submitUpload () {\r\n      this.uploadItem.hash = this.hash\r\n      let vm = this\r\n      this.$refs['uploadForm'].validate((valid) => {\r\n        if (valid) {\r\n          vm.uploadModal.loading = true\r\n          upJson(vm.uploadItem).then(response => {\r\n            vm.$Message.success(response.data.msg)\r\n            vm.getList()\r\n            vm.cancelUpload()\r\n          }).catch(() => {\r\n            vm.uploadModal.loading = false\r\n          })\r\n        }\r\n      })\r\n    },\r\n    cancel () {\r\n      this.modalSetting.show = false\r\n    },\r\n    cancelUpload () {\r\n      this.uploadModal.show = false\r\n    },\r\n    changePage (page) {\r\n      this.tableShow.currentPage = page\r\n      this.getList()\r\n    },\r\n    changeSize (size) {\r\n      this.tableShow.pageSize = size\r\n      this.getList()\r\n    },\r\n    search () {\r\n      this.tableShow.currentPage = 1\r\n      this.getList()\r\n    },\r\n    getList () {\r\n      let vm = this\r\n      vm.listLoading = true\r\n      getResponse({\r\n        page: vm.tableShow.currentPage,\r\n        size: vm.tableShow.pageSize,\r\n        hash: vm.hash\r\n      }).then(response => {\r\n        vm.tableData = response.data.data.list\r\n        vm.tableShow.listCount = response.data.data.count\r\n        vm.tableShow.dataType = response.data.data.dataType\r\n        vm.apiInfo = response.data.data.apiInfo\r\n        vm.listLoading = false\r\n      })\r\n    },\r\n    doCancel (data) {\r\n      if (!data) {\r\n        this.formItem.id = 0\r\n        this.formItem.defaults = ''\r\n        this.formItem.isMust = '1'\r\n        this.$refs['myForm'].resetFields()\r\n        this.modalSetting.loading = false\r\n        this.modalSetting.index = 0\r\n      }\r\n    },\r\n    doUploadCancel (data) {\r\n      if (!data) {\r\n        this.uploadItem.jsonStr = ''\r\n        this.uploadModal.loading = false\r\n      }\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["response.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkfile":"response.vue","sourceRoot":"src/view/interface","sourcesContent":["<style lang=\"less\" scoped>\r\n  @import './list.less';\r\n</style>\r\n<template>\r\n  <div>\r\n    <Row>\r\n      <Col span=\"24\">\r\n        <Card>\r\n          <p slot=\"title\" style=\"height: 32px\">\r\n            <Button type=\"warning\" @click=\"alertUpload\" icon=\"md-cloud-upload\">上传</Button>\r\n          </p>\r\n          <Alert show-icon>\r\n            {{ apiInfo.info }} | {{ apiInfo.hash }} | {{ apiInfo.api_class }}\r\n            <Icon type=\"ios-bulb-outline\" slot=\"icon\"></Icon>\r\n            <span slot=\"desc\"></span>\r\n          </Alert>\r\n          <div>\r\n            <Table :loading=\"listLoading\" :columns=\"columnsList\" :data=\"tableData\" border disabled-hover></Table>\r\n          </div>\r\n          <div class=\"margin-top-15\" style=\"text-align: center\">\r\n            <Page :total=\"tableShow.listCount\" :current=\"tableShow.currentPage\"\r\n                  :page-size=\"tableShow.pageSize\" @on-change=\"changePage\"\r\n                  @on-page-size-change=\"changeSize\" show-elevator show-sizer show-total></Page>\r\n          </div>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n    <Modal v-model=\"modalSetting.show\" width=\"668\" :styles=\"{top: '30px'}\" @on-visible-change=\"doCancel\">\r\n      <p slot=\"header\" style=\"color:#2d8cf0\">\r\n        <Icon type=\"md-alert\"></Icon>\r\n        <span>{{formItem.id ? '编辑' : '新增'}}返回字段</span>\r\n      </p>\r\n      <Form ref=\"myForm\" :rules=\"ruleValidate\" :model=\"formItem\" :label-width=\"80\">\r\n        <FormItem label=\"字段名称\" prop=\"field_name\">\r\n          <Input v-model=\"formItem.field_name\" disabled placeholder=\"请输入字段名称\"></Input>\r\n        </FormItem>\r\n        <FormItem label=\"数据类型\" prop=\"data_type\">\r\n          <Select v-model=\"formItem.data_type\" style=\"width:200px\">\r\n            <Option v-for=\"(v, i) in tableShow.dataType\" :value=\"i\" :key=\"i\"> {{v}}</Option>\r\n          </Select>\r\n        </FormItem>\r\n        <FormItem label=\"是否必填\">\r\n          <RadioGroup v-model=\"formItem.is_must\">\r\n            <Radio label=\"0\">不必填</Radio>\r\n            <Radio label=\"1\">必填</Radio>\r\n          </RadioGroup>\r\n        </FormItem>\r\n        <FormItem label=\"默认值\" prop=\"default\" v-if=\"formItem.is_must.toString() === '0'\">\r\n          <Input disabled style=\"width: 300px\" v-model=\"formItem.defaults\"></Input>\r\n          <Tag color=\"error\" class=\"margin-left-5\"> 仅在字段非必填的情况下生效 </Tag>\r\n        </FormItem>\r\n        <FormItem label=\"规则细节\" prop=\"range\">\r\n          <Input disabled v-model=\"formItem.range\" type=\"textarea\" placeholder=\"请输入符合要求的JSON字符串\"></Input>\r\n        </FormItem>\r\n        <FormItem label=\"字段说明\" prop=\"info\">\r\n          <Input v-model=\"formItem.info\" type=\"textarea\" placeholder=\"请输入字段描述\"></Input>\r\n        </FormItem>\r\n      </Form>\r\n      <div slot=\"footer\">\r\n        <Button type=\"text\" @click=\"cancel\" class=\"margin-right-10\">取消</Button>\r\n        <Button type=\"primary\" @click=\"submit\" :loading=\"modalSetting.loading\">确定</Button>\r\n      </div>\r\n    </Modal>\r\n    <Modal v-model=\"uploadModal.show\" width=\"668\" :styles=\"{top: '30px'}\" @on-visible-change=\"doUploadCancel\">\r\n      <p slot=\"header\" style=\"color:#2d8cf0\">\r\n        <Icon type=\"information-circled\"></Icon>\r\n        <span>上传返回字段</span>\r\n      </p>\r\n      <Form ref=\"uploadForm\" :rules=\"uploadValidate\" :model=\"uploadItem\" :label-width=\"80\">\r\n        <FormItem label=\"数据模板\" prop=\"jsonStr\">\r\n          <Input v-model=\"uploadItem.jsonStr\" :autosize=\"{maxRows: 10}\" type=\"textarea\"\r\n                 placeholder=\"请务必包含code,msg,data全部返回数据\"></Input>\r\n        </FormItem>\r\n      </Form>\r\n      <div slot=\"footer\">\r\n        <Button type=\"text\" @click=\"cancelUpload\" class=\"margin-right-10\">取消</Button>\r\n        <Button type=\"primary\" @click=\"submitUpload\" :loading=\"uploadModal.loading\">确定</Button>\r\n      </div>\r\n    </Modal>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { getResponse, edit, del, upJson } from '@/api/fields'\r\n\r\nconst editButton = (vm, h, currentRow, index) => {\r\n  return h('Button', {\r\n    props: {\r\n      type: 'primary'\r\n    },\r\n    style: {\r\n      margin: '0 5px'\r\n    },\r\n    on: {\r\n      'click': () => {\r\n        vm.formItem.id = currentRow.id\r\n        vm.formItem.field_name = currentRow.show_name\r\n        vm.formItem.data_type = currentRow.data_type.toString()\r\n        vm.formItem.defaults = currentRow.default\r\n        vm.formItem.range = currentRow.range\r\n        vm.formItem.is_must = currentRow.is_must.toString()\r\n        vm.formItem.info = currentRow.info\r\n        vm.modalSetting.show = true\r\n        vm.modalSetting.index = index\r\n      }\r\n    }\r\n  }, vm.$t('edit_button'))\r\n}\r\nconst deleteButton = (vm, h, currentRow, index) => {\r\n  return h('Poptip', {\r\n    props: {\r\n      confirm: true,\r\n      title: '您确定要删除这条数据吗? ',\r\n      transfer: true\r\n    },\r\n    on: {\r\n      'on-ok': () => {\r\n        del(currentRow.id).then(response => {\r\n          currentRow.loading = false\r\n          vm.tableData.splice(index, 1)\r\n          vm.$Message.success(response.data.msg)\r\n        })\r\n      }\r\n    }\r\n  }, [\r\n    h('Button', {\r\n      style: {\r\n        margin: '0 5px'\r\n      },\r\n      props: {\r\n        type: 'error',\r\n        placement: 'top',\r\n        loading: currentRow.isDeleting\r\n      }\r\n    }, vm.$t('delete_button'))\r\n  ])\r\n}\r\nexport default {\r\n  name: 'interface_response',\r\n  data () {\r\n    return {\r\n      hash: '',\r\n      columnsList: [\r\n        {\r\n          title: '序号',\r\n          type: 'index',\r\n          width: 65,\r\n          align: 'center'\r\n        },\r\n        {\r\n          title: '字段名称',\r\n          align: 'left',\r\n          key: 'show_name',\r\n          width: 200\r\n        },\r\n        {\r\n          title: '数据类型',\r\n          align: 'center',\r\n          width: 100,\r\n          render: (h, params) => {\r\n            let type = params.row.data_type\r\n            return h('Tag', {\r\n              attrs: {\r\n                color: 'primary'\r\n              }\r\n            }, this.tableShow.dataType[type])\r\n          }\r\n        },\r\n        {\r\n          title: '是否必须',\r\n          align: 'center',\r\n          width: 100,\r\n          render: (h, params) => {\r\n            if (params.row.is_must === 1) {\r\n              return h('Tag', {\r\n                attrs: {\r\n                  color: 'error'\r\n                }\r\n              }, '必填')\r\n            } else {\r\n              return h('Tag', {\r\n                attrs: {\r\n                  color: 'primary'\r\n                }\r\n              }, '可选')\r\n            }\r\n          }\r\n        },\r\n        {\r\n          title: '默认值',\r\n          align: 'center',\r\n          key: 'default',\r\n          width: 160\r\n        },\r\n        {\r\n          title: '字段说明',\r\n          align: 'left',\r\n          key: 'info'\r\n        },\r\n        {\r\n          title: '操作',\r\n          align: 'center',\r\n          width: 205,\r\n          render: (h, params) => {\r\n            return h('div', [\r\n              editButton(this, h, params.row, params.index),\r\n              deleteButton(this, h, params.row, params.index)\r\n            ])\r\n          }\r\n        }\r\n      ],\r\n      tableData: [],\r\n      tableShow: {\r\n        currentPage: 1,\r\n        pageSize: 10,\r\n        listCount: 0,\r\n        dataType: {}\r\n      },\r\n      apiInfo: {},\r\n      modalSetting: {\r\n        show: false,\r\n        loading: false,\r\n        index: 0\r\n      },\r\n      uploadModal: {\r\n        show: false,\r\n        loading: false,\r\n        index: 0\r\n      },\r\n      formItem: {\r\n        field_name: '',\r\n        data_type: '2',\r\n        defaults: '',\r\n        range: '',\r\n        is_must: '1',\r\n        info: '',\r\n        type: 1,\r\n        id: 0\r\n      },\r\n      uploadItem: {\r\n        jsonStr: '',\r\n        type: 1\r\n      },\r\n      ruleValidate: {\r\n        field_name: [\r\n          { required: true, message: '字段名称不能为空', trigger: 'blur' }\r\n        ]\r\n      },\r\n      uploadValidate: {\r\n        jsonStr: [\r\n          { required: true, message: '数据模板不能为空', trigger: 'blur' }\r\n        ]\r\n      },\r\n      listLoading: false\r\n    }\r\n  },\r\n  created () {\r\n    this.hash = this.$route.params.hash.toString()\r\n    this.getList()\r\n  },\r\n  activated () {\r\n    this.hash = this.$route.params.hash.toString()\r\n    this.getList()\r\n  },\r\n  methods: {\r\n    alertUpload () {\r\n      this.uploadModal.show = true\r\n    },\r\n    submit () {\r\n      this.formItem.hash = this.hash\r\n      let vm = this\r\n      this.$refs['myForm'].validate((valid) => {\r\n        if (valid) {\r\n          vm.modalSetting.loading = true\r\n          edit(vm.formItem).then(response => {\r\n            vm.$Message.success(response.data.msg)\r\n            vm.getList()\r\n            vm.cancel()\r\n          }).catch(() => {\r\n            vm.modalSetting.loading = false\r\n          })\r\n        }\r\n      })\r\n    },\r\n    submitUpload () {\r\n      this.uploadItem.hash = this.hash\r\n      let vm = this\r\n      this.$refs['uploadForm'].validate((valid) => {\r\n        if (valid) {\r\n          vm.uploadModal.loading = true\r\n          upJson(vm.uploadItem).then(response => {\r\n            vm.$Message.success(response.data.msg)\r\n            vm.getList()\r\n            vm.cancelUpload()\r\n          }).catch(() => {\r\n            vm.uploadModal.loading = false\r\n          })\r\n        }\r\n      })\r\n    },\r\n    cancel () {\r\n      this.modalSetting.show = false\r\n    },\r\n    cancelUpload () {\r\n      this.uploadModal.show = false\r\n    },\r\n    changePage (page) {\r\n      this.tableShow.currentPage = page\r\n      this.getList()\r\n    },\r\n    changeSize (size) {\r\n      this.tableShow.pageSize = size\r\n      this.getList()\r\n    },\r\n    search () {\r\n      this.tableShow.currentPage = 1\r\n      this.getList()\r\n    },\r\n    getList () {\r\n      let vm = this\r\n      vm.listLoading = true\r\n      getResponse({\r\n        page: vm.tableShow.currentPage,\r\n        size: vm.tableShow.pageSize,\r\n        hash: vm.hash\r\n      }).then(response => {\r\n        vm.tableData = response.data.data.list\r\n        vm.tableShow.listCount = response.data.data.count\r\n        vm.tableShow.dataType = response.data.data.dataType\r\n        vm.apiInfo = response.data.data.apiInfo\r\n        vm.listLoading = false\r\n      })\r\n    },\r\n    doCancel (data) {\r\n      if (!data) {\r\n        this.formItem.id = 0\r\n        this.formItem.defaults = ''\r\n        this.formItem.isMust = '1'\r\n        this.$refs['myForm'].resetFields()\r\n        this.modalSetting.loading = false\r\n        this.modalSetting.index = 0\r\n      }\r\n    },\r\n    doUploadCancel (data) {\r\n      if (!data) {\r\n        this.uploadItem.jsonStr = ''\r\n        this.uploadModal.loading = false\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n"]}]}