{"remainingRequest":"E:\\ApiAdmin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\ApiAdmin\\src\\view\\app\\list.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\ApiAdmin\\src\\view\\app\\list.vue","mtime":1635783329002},{"path":"E:\\ApiAdmin\\node_modules\\babel-loader\\lib\\index.js","mtime":1635783561745},{"path":"E:\\ApiAdmin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1635783567026},{"path":"E:\\ApiAdmin\\node_modules\\vue-loader\\lib\\index.js","mtime":1635783560295}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { getList, changeStatus, add, edit, del, getAppInfo, refreshAppSecretApi } from '@/api/app'\r\nimport { getAll } from '@/api/app-group'\r\n\r\nconst editButton = (vm, h, currentRow, index) => {\r\n  if (vm.buttonShow.edit) {\r\n    return h('Button', {\r\n      props: {\r\n        type: 'primary'\r\n      },\r\n      style: {\r\n        margin: '0 5px'\r\n      },\r\n      on: {\r\n        'click': () => {\r\n          getAll().then(response => {\r\n            vm.appGroup = response.data.data.list\r\n            vm.formItem.id = currentRow.id\r\n            vm.formItem.app_name = currentRow.app_name\r\n            vm.formItem.app_info = currentRow.app_info\r\n            vm.formItem.app_id = currentRow.app_id\r\n            vm.formItem.app_secret = currentRow.app_secret\r\n            vm.formItem.app_group = currentRow.app_group\r\n            getAppInfo(currentRow.id).then(response => {\r\n              let res = response.data\r\n              vm.groupInfo = res.data.groupInfo\r\n              vm.groupList = res.data.apiList\r\n              for (let index in vm.groupInfo) {\r\n                if (res.data.app_detail === null || typeof (res.data.app_detail[index]) === 'undefined') {\r\n                  vm.$set(vm.checkAllStatus, index, false)\r\n                  vm.$set(vm.checkAllIndeterminate, index, false)\r\n                  vm.$set(vm.formItem.app_api, index, [])\r\n                } else {\r\n                  let hasLength = res.data.app_detail[index].length\r\n                  if (hasLength === 0) {\r\n                    vm.$set(vm.checkAllStatus, index, false)\r\n                    vm.$set(vm.checkAllIndeterminate, index, false)\r\n                    vm.$set(vm.formItem.app_api, index, [])\r\n                  } else if (vm.groupList[index].length === hasLength) {\r\n                    vm.$set(vm.checkAllStatus, index, true)\r\n                    vm.$set(vm.checkAllIndeterminate, index, false)\r\n                    vm.$set(vm.formItem.app_api, index, res.data.app_detail[index])\r\n                  } else {\r\n                    vm.$set(vm.checkAllStatus, index, false)\r\n                    vm.$set(vm.checkAllIndeterminate, index, true)\r\n                    vm.$set(vm.formItem.app_api, index, res.data.app_detail[index])\r\n                  }\r\n                }\r\n              }\r\n            })\r\n            vm.modalSetting.show = true\r\n            vm.modalSetting.index = index\r\n          })\r\n        }\r\n      }\r\n    }, vm.$t('edit_button'))\r\n  }\r\n}\r\nconst deleteButton = (vm, h, currentRow, index) => {\r\n  if (vm.buttonShow.del) {\r\n    return h('Poptip', {\r\n      props: {\r\n        confirm: true,\r\n        title: '您确定要删除这条数据吗? ',\r\n        transfer: true\r\n      },\r\n      on: {\r\n        'on-ok': () => {\r\n          del(currentRow.id).then(response => {\r\n            vm.tableData.splice(index, 1)\r\n            vm.$Message.success(response.data.msg)\r\n          })\r\n          currentRow.loading = false\r\n        }\r\n      }\r\n    }, [\r\n      h('Button', {\r\n        style: {\r\n          margin: '0 5px'\r\n        },\r\n        props: {\r\n          type: 'error',\r\n          placement: 'top',\r\n          loading: currentRow.isDeleting\r\n        }\r\n      }, vm.$t('delete_button'))\r\n    ])\r\n  }\r\n}\r\n\r\nexport default {\r\n  name: 'interface_list',\r\n  data () {\r\n    return {\r\n      appGroup: [],\r\n      columnsList: [\r\n        {\r\n          title: '序号',\r\n          type: 'index',\r\n          width: 65,\r\n          align: 'center'\r\n        },\r\n        {\r\n          title: '应用名称',\r\n          align: 'center',\r\n          key: 'app_name',\r\n          minWidth: 130\r\n        },\r\n        {\r\n          title: 'AppId',\r\n          align: 'center',\r\n          key: 'app_id',\r\n          width: 120\r\n        },\r\n        {\r\n          title: 'AppSecret',\r\n          align: 'center',\r\n          key: 'app_secret',\r\n          width: 310\r\n        },\r\n        {\r\n          title: '应用说明',\r\n          align: 'center',\r\n          key: 'app_info',\r\n          width: 160\r\n        },\r\n        {\r\n          title: '应用状态',\r\n          align: 'center',\r\n          width: 100,\r\n          render: (h, params) => {\r\n            let vm = this\r\n            return h('i-switch', {\r\n              attrs: {\r\n                size: 'large'\r\n              },\r\n              props: {\r\n                'true-value': 1,\r\n                'false-value': 0,\r\n                value: params.row.app_status,\r\n                disabled: !vm.buttonShow.changeStatus\r\n              },\r\n              on: {\r\n                'on-change': function (status) {\r\n                  changeStatus(status, params.row.id).then(response => {\r\n                    vm.$Message.success(response.data.msg)\r\n                    vm.getList()\r\n                  })\r\n                }\r\n              }\r\n            }, [\r\n              h('span', {\r\n                slot: 'open'\r\n              }, vm.$t('open_choose')),\r\n              h('span', {\r\n                slot: 'close'\r\n              }, vm.$t('close_choose'))\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          title: '操作',\r\n          align: 'center',\r\n          width: 200,\r\n          render: (h, params) => {\r\n            return h('div', [\r\n              editButton(this, h, params.row, params.index),\r\n              deleteButton(this, h, params.row, params.index)\r\n            ])\r\n          }\r\n        }\r\n      ],\r\n      tableData: [],\r\n      groupInfo: {},\r\n      groupList: {},\r\n      tableShow: {\r\n        currentPage: 1,\r\n        pageSize: 10,\r\n        listCount: 0\r\n      },\r\n      searchConf: {\r\n        type: '',\r\n        keywords: '',\r\n        status: ''\r\n      },\r\n      modalSetting: {\r\n        show: false,\r\n        loading: false,\r\n        index: 0\r\n      },\r\n      formItem: {\r\n        app_name: '',\r\n        app_id: '',\r\n        app_secret: '',\r\n        app_info: '',\r\n        app_api: {},\r\n        app_group: 'default',\r\n        id: 0\r\n      },\r\n      ruleValidate: {\r\n        app_name: [\r\n          { required: true, message: '应用名称不能为空', trigger: 'blur' }\r\n        ]\r\n      },\r\n      checkAllStatus: {},\r\n      checkAllIndeterminate: {},\r\n      buttonShow: {\r\n        edit: true,\r\n        del: true,\r\n        changeStatus: true\r\n      },\r\n      listLoading: false\r\n    }\r\n  },\r\n  created () {\r\n    let vm = this\r\n    vm.getList()\r\n    vm.hasRule('App/edit').then(res => {\r\n      vm.buttonShow.edit = res\r\n    })\r\n    vm.hasRule('App/del').then(res => {\r\n      vm.buttonShow.del = res\r\n    })\r\n    vm.hasRule('App/changeStatus').then(res => {\r\n      vm.buttonShow.changeStatus = res\r\n    })\r\n  },\r\n  methods: {\r\n    alertAdd () {\r\n      let vm = this\r\n      getAll().then(response => {\r\n        vm.appGroup = response.data.data.list\r\n      })\r\n      getAppInfo().then(response => {\r\n        let res = response.data\r\n        vm.formItem.app_id = res.data.app_id\r\n        vm.formItem.app_secret = res.data.app_secret\r\n        vm.groupInfo = res.data.groupInfo\r\n        vm.groupList = res.data.apiList\r\n        for (let index in vm.groupInfo) {\r\n          vm.$set(vm.checkAllStatus, index, false)\r\n          vm.$set(vm.checkAllIndeterminate, index, false)\r\n          vm.$set(vm.formItem.app_api, index, [])\r\n        }\r\n      })\r\n      vm.modalSetting.show = true\r\n    },\r\n    submit () {\r\n      let vm = this\r\n      vm.$refs['myForm'].validate((valid) => {\r\n        if (valid) {\r\n          vm.modalSetting.loading = true\r\n          if (vm.formItem.id === 0) {\r\n            add(vm.formItem).then(response => {\r\n              vm.$Message.success(response.data.msg)\r\n              vm.getList()\r\n              vm.cancel()\r\n            }).catch(() => {\r\n              vm.modalSetting.loading = false\r\n            })\r\n          } else {\r\n            edit(vm.formItem).then(response => {\r\n              vm.$Message.success(response.data.msg)\r\n              vm.getList()\r\n              vm.cancel()\r\n            }).catch(() => {\r\n              vm.modalSetting.loading = false\r\n            })\r\n          }\r\n        }\r\n      })\r\n    },\r\n    cancel () {\r\n      this.formItem.id = 0\r\n      this.$refs['myForm'].resetFields()\r\n      this.modalSetting.show = false\r\n      this.modalSetting.loading = false\r\n      this.modalSetting.index = 0\r\n    },\r\n    changePage (page) {\r\n      this.tableShow.currentPage = page\r\n      this.getList()\r\n    },\r\n    changeSize (size) {\r\n      this.tableShow.pageSize = size\r\n      this.getList()\r\n    },\r\n    handleCheckAll (groupId) {\r\n      if (this.checkAllStatus[groupId]) {\r\n        this.checkAllStatus[groupId] = false\r\n      } else {\r\n        this.checkAllStatus[groupId] = !this.checkAllStatus[groupId]\r\n      }\r\n      this.checkAllIndeterminate[groupId] = false\r\n\r\n      if (this.checkAllStatus[groupId]) {\r\n        let vm = this\r\n        this.groupList[groupId].forEach(item => {\r\n          vm.formItem.app_api[groupId].push(item.hash)\r\n        })\r\n      } else {\r\n        this.formItem.app_api[groupId] = []\r\n      }\r\n    },\r\n    checkAllGroupChange (groupId) {\r\n      if (this.formItem.app_api[groupId].length === this.groupList[groupId].length) {\r\n        this.checkAllIndeterminate[groupId] = false\r\n        this.checkAllStatus[groupId] = true\r\n      } else if (this.formItem.app_api[groupId].length > 0) {\r\n        this.checkAllIndeterminate[groupId] = true\r\n        this.checkAllStatus[groupId] = false\r\n      } else {\r\n        this.checkAllIndeterminate[groupId] = false\r\n        this.checkAllStatus[groupId] = false\r\n      }\r\n    },\r\n    search () {\r\n      this.tableShow.currentPage = 1\r\n      this.getList()\r\n    },\r\n    refreshAppSecret () {\r\n      let vm = this\r\n      refreshAppSecretApi().then(response => {\r\n        vm.formItem.app_secret = response.data.data.app_secret\r\n      })\r\n    },\r\n    getList () {\r\n      let vm = this\r\n      vm.listLoading = true\r\n      getList({\r\n        page: vm.tableShow.currentPage,\r\n        size: vm.tableShow.pageSize,\r\n        type: vm.searchConf.type,\r\n        keywords: vm.searchConf.keywords,\r\n        status: vm.searchConf.status\r\n      }).then(response => {\r\n        vm.tableData = response.data.data.list\r\n        vm.tableShow.listCount = response.data.data.count\r\n        vm.listLoading = false\r\n      })\r\n    },\r\n    doCancel (data) {\r\n      if (!data) {\r\n        this.formItem.id = 0\r\n        this.$refs['myForm'].resetFields()\r\n        this.modalSetting.loading = false\r\n        this.modalSetting.index = 0\r\n      }\r\n    }\r\n  }\r\n}\r\n",null]}