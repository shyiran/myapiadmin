{"remainingRequest":"E:\\ApiAdmin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\ApiAdmin\\src\\view\\login\\login.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\ApiAdmin\\src\\view\\login\\login.vue","mtime":1635783329014},{"path":"E:\\ApiAdmin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1635783567026},{"path":"E:\\ApiAdmin\\node_modules\\babel-loader\\lib\\index.js","mtime":1635783561745},{"path":"E:\\ApiAdmin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1635783567026},{"path":"E:\\ApiAdmin\\node_modules\\vue-loader\\lib\\index.js","mtime":1635783560295}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { mapActions } from 'vuex'\r\nimport { loginByQQ, wx, getQQCode, getQr, checkWxLogin, getWxCode } from '@/api/third-login'\r\nimport qq_login from '@/assets/images/qq-login.png'\r\nimport wx_login from '@/assets/images/wx-login.png'\r\nimport { filterAsyncRouter } from '@/libs/router-utils'\r\n\r\nexport default {\r\n  data () {\r\n    return {\r\n      qq_login,\r\n      wx_login,\r\n      form: {\r\n        username: '',\r\n        password: ''\r\n      },\r\n      rules: {\r\n        username: [\r\n          { required: true, message: '账号不能为空', trigger: 'blur' }\r\n        ],\r\n        password: [\r\n          { required: true, message: '密码不能为空', trigger: 'blur' }\r\n        ]\r\n      },\r\n      wxQrModel: false,\r\n      wxQrUrl: '',\r\n      loading: false\r\n    }\r\n  },\r\n  created () {\r\n    let p = this.$route.params.loginType\r\n    let q = this.$route.query\r\n    if (p) {\r\n      this.$Spin.show()\r\n      let vm = this\r\n      switch (p) {\r\n        case 'qq':\r\n          loginByQQ(q).then(response => {\r\n            vm.$Spin.hide()\r\n            vm.$store.commit('setUserInfo', response.data.data)\r\n            vm.$store.commit('setToken', response.data.data.apiAuth)\r\n            vm.$store.commit('updateMenuList', filterAsyncRouter(response.data.data.menu))\r\n            sessionStorage.setItem('dynamicRouter', JSON.stringify(response.data.data.menu))\r\n            sessionStorage.setItem('ApiAdmin_AppInfo', '管理员')\r\n            vm.$router.push({\r\n              name: 'home'\r\n            })\r\n          })\r\n          break\r\n        case 'wx':\r\n          wx(q).then(response => {\r\n            vm.$Spin.hide()\r\n            vm.$store.commit('setUserInfo', response.data.data)\r\n            vm.$store.commit('setToken', response.data.data.apiAuth)\r\n            vm.$store.commit('updateMenuList', filterAsyncRouter(response.data.data.menu))\r\n            sessionStorage.setItem('dynamicRouter', JSON.stringify(response.data.data.menu))\r\n            sessionStorage.setItem('ApiAdmin_AppInfo', '管理员')\r\n            vm.$router.push({\r\n              name: 'home'\r\n            })\r\n          })\r\n          break\r\n        default :\r\n          this.$Spin.hide()\r\n          break\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapActions([\r\n      'handleLogin'\r\n    ]),\r\n    handleSubmit () {\r\n      let vm = this\r\n      let username = vm.form.username\r\n      let password = vm.form.password\r\n      vm.$refs.loginForm.validate((valid) => {\r\n        if (valid) {\r\n          vm.loading = true\r\n          vm.handleLogin({ username, password }).then(() => {\r\n            sessionStorage.setItem('ApiAdmin_AppInfo', '管理员')\r\n            vm.$router.push({\r\n              name: 'home'\r\n            })\r\n            vm.loading = false\r\n          }).catch(() => {\r\n            vm.loading = false\r\n          })\r\n        }\r\n      })\r\n    },\r\n    qqLogin () {\r\n      getQQCode().then(response => {\r\n        window.location.href = 'https://graph.qq.com/oauth2.0/authorize?response_type=code&client_id=' +\r\n          response.data.data.appId + '&redirect_uri=' + response.data.data.redirectUri +\r\n          '&response_type=code&state=' + response.data.data.state\r\n      })\r\n    },\r\n    wxLoginBak () {\r\n      let vm = this\r\n      vm.wxQrModel = true\r\n      getQr().then(function (response) {\r\n        vm.wxQrUrl = response.data.data.qrUrl\r\n        let checkWx = setInterval(function () {\r\n          checkWxLogin({ state: response.data.data.state }).then(res => {\r\n            if (res.data.code === 1) {\r\n              vm.$store.commit('setUserInfo', res.data.data)\r\n              vm.$store.commit('setToken', res.data.data.apiAuth)\r\n              vm.$Message.success(res.data.msg)\r\n              vm.$router.push({\r\n                name: 'home'\r\n              })\r\n              clearInterval(checkWx)\r\n            }\r\n          }).catch(() => {\r\n            clearInterval(checkWx)\r\n          })\r\n        }, 3000)\r\n      })\r\n    },\r\n    wxLogin () {\r\n      getWxCode().then(response => {\r\n        window.location.href = 'https://open.weixin.qq.com/connect/qrconnect?appid=' +\r\n          response.data.data.appId + '&redirect_uri=' + response.data.data.redirectUri +\r\n          '&response_type=code&scope=snsapi_login&state=' + response.data.data.state + '#wechat_redirect'\r\n      })\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"login.vue","sourceRoot":"src/view/login","sourcesContent":["<style lang=\"less\">\r\n  @import './login.less';\r\n</style>\r\n\r\n<template>\r\n  <div class=\"login\" @keydown.enter=\"handleSubmit\">\r\n    <div class=\"login-con\">\r\n      <Card icon=\"md-log-in\" title=\"欢迎登录ApiAdmin后台管理系统\" :bordered=\"false\">\r\n        <div class=\"form-con\">\r\n          <Form ref=\"loginForm\" :model=\"form\" :rules=\"rules\">\r\n            <FormItem prop=\"username\">\r\n              <Input v-model=\"form.username\" placeholder=\"请使用微信/QQ登录\">\r\n                <span slot=\"prepend\">\r\n                  <Icon :size=\"16\" type=\"ios-person\"></Icon>\r\n                </span>\r\n              </Input>\r\n            </FormItem>\r\n            <FormItem prop=\"password\">\r\n              <Input type=\"password\" v-model=\"form.password\" placeholder=\"请使用微信/QQ登录\">\r\n                <span slot=\"prepend\">\r\n                  <Icon :size=\"14\" type=\"md-lock\"></Icon>\r\n                </span>\r\n              </Input>\r\n            </FormItem>\r\n            <FormItem class=\"margin-bottom-15\">\r\n              <Button type=\"primary\" long :loading=\"loading\" @click=\"handleSubmit\">登录</Button>\r\n            </FormItem>\r\n          </Form>\r\n          <div style=\"padding-top:10px;font-size: 11px;border-top: 1px solid #e9eaec;\">\r\n            <span style=\"vertical-align:middle;\">其他登录：</span>\r\n            <img style=\"vertical-align:middle;\" @click=\"qqLogin\" :src=\"qq_login\" alt=\"\"> &nbsp;\r\n            <img style=\"vertical-align:middle;\" @click=\"wxLogin\" :src=\"wx_login\" alt=\"\">\r\n          </div>\r\n        </div>\r\n      </Card>\r\n    </div>\r\n    <Modal v-model=\"wxQrModel\" width=\"360\">\r\n      <p slot=\"header\" style=\"color:#2d8cf0;\">\r\n        <Icon type=\"information-circled\"></Icon>\r\n        <span>请用微信扫码登录</span>\r\n      </p>\r\n      <div style=\"text-align:center\">\r\n        <img :src=\"wxQrUrl\" alt=\"\">\r\n      </div>\r\n      <div slot=\"footer\">\r\n        <Button type=\"primary\" size=\"large\" long @click=\"wxQrModel = false\">关闭</Button>\r\n      </div>\r\n    </Modal>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapActions } from 'vuex'\r\nimport { loginByQQ, wx, getQQCode, getQr, checkWxLogin, getWxCode } from '@/api/third-login'\r\nimport qq_login from '@/assets/images/qq-login.png'\r\nimport wx_login from '@/assets/images/wx-login.png'\r\nimport { filterAsyncRouter } from '@/libs/router-utils'\r\n\r\nexport default {\r\n  data () {\r\n    return {\r\n      qq_login,\r\n      wx_login,\r\n      form: {\r\n        username: '',\r\n        password: ''\r\n      },\r\n      rules: {\r\n        username: [\r\n          { required: true, message: '账号不能为空', trigger: 'blur' }\r\n        ],\r\n        password: [\r\n          { required: true, message: '密码不能为空', trigger: 'blur' }\r\n        ]\r\n      },\r\n      wxQrModel: false,\r\n      wxQrUrl: '',\r\n      loading: false\r\n    }\r\n  },\r\n  created () {\r\n    let p = this.$route.params.loginType\r\n    let q = this.$route.query\r\n    if (p) {\r\n      this.$Spin.show()\r\n      let vm = this\r\n      switch (p) {\r\n        case 'qq':\r\n          loginByQQ(q).then(response => {\r\n            vm.$Spin.hide()\r\n            vm.$store.commit('setUserInfo', response.data.data)\r\n            vm.$store.commit('setToken', response.data.data.apiAuth)\r\n            vm.$store.commit('updateMenuList', filterAsyncRouter(response.data.data.menu))\r\n            sessionStorage.setItem('dynamicRouter', JSON.stringify(response.data.data.menu))\r\n            sessionStorage.setItem('ApiAdmin_AppInfo', '管理员')\r\n            vm.$router.push({\r\n              name: 'home'\r\n            })\r\n          })\r\n          break\r\n        case 'wx':\r\n          wx(q).then(response => {\r\n            vm.$Spin.hide()\r\n            vm.$store.commit('setUserInfo', response.data.data)\r\n            vm.$store.commit('setToken', response.data.data.apiAuth)\r\n            vm.$store.commit('updateMenuList', filterAsyncRouter(response.data.data.menu))\r\n            sessionStorage.setItem('dynamicRouter', JSON.stringify(response.data.data.menu))\r\n            sessionStorage.setItem('ApiAdmin_AppInfo', '管理员')\r\n            vm.$router.push({\r\n              name: 'home'\r\n            })\r\n          })\r\n          break\r\n        default :\r\n          this.$Spin.hide()\r\n          break\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapActions([\r\n      'handleLogin'\r\n    ]),\r\n    handleSubmit () {\r\n      let vm = this\r\n      let username = vm.form.username\r\n      let password = vm.form.password\r\n      vm.$refs.loginForm.validate((valid) => {\r\n        if (valid) {\r\n          vm.loading = true\r\n          vm.handleLogin({ username, password }).then(() => {\r\n            sessionStorage.setItem('ApiAdmin_AppInfo', '管理员')\r\n            vm.$router.push({\r\n              name: 'home'\r\n            })\r\n            vm.loading = false\r\n          }).catch(() => {\r\n            vm.loading = false\r\n          })\r\n        }\r\n      })\r\n    },\r\n    qqLogin () {\r\n      getQQCode().then(response => {\r\n        window.location.href = 'https://graph.qq.com/oauth2.0/authorize?response_type=code&client_id=' +\r\n          response.data.data.appId + '&redirect_uri=' + response.data.data.redirectUri +\r\n          '&response_type=code&state=' + response.data.data.state\r\n      })\r\n    },\r\n    wxLoginBak () {\r\n      let vm = this\r\n      vm.wxQrModel = true\r\n      getQr().then(function (response) {\r\n        vm.wxQrUrl = response.data.data.qrUrl\r\n        let checkWx = setInterval(function () {\r\n          checkWxLogin({ state: response.data.data.state }).then(res => {\r\n            if (res.data.code === 1) {\r\n              vm.$store.commit('setUserInfo', res.data.data)\r\n              vm.$store.commit('setToken', res.data.data.apiAuth)\r\n              vm.$Message.success(res.data.msg)\r\n              vm.$router.push({\r\n                name: 'home'\r\n              })\r\n              clearInterval(checkWx)\r\n            }\r\n          }).catch(() => {\r\n            clearInterval(checkWx)\r\n          })\r\n        }, 3000)\r\n      })\r\n    },\r\n    wxLogin () {\r\n      getWxCode().then(response => {\r\n        window.location.href = 'https://open.weixin.qq.com/connect/qrconnect?appid=' +\r\n          response.data.data.appId + '&redirect_uri=' + response.data.data.redirectUri +\r\n          '&response_type=code&scope=snsapi_login&state=' + response.data.data.state + '#wechat_redirect'\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n"]}]}