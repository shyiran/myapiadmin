{"remainingRequest":"E:\\ApiAdmin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\ApiAdmin\\src\\view\\system\\log.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\ApiAdmin\\src\\view\\system\\log.vue","mtime":1635783329024},{"path":"E:\\ApiAdmin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1635783567026},{"path":"E:\\ApiAdmin\\node_modules\\babel-loader\\lib\\index.js","mtime":1635783561745},{"path":"E:\\ApiAdmin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1635783567026},{"path":"E:\\ApiAdmin\\node_modules\\vue-loader\\lib\\index.js","mtime":1635783560295}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { getList, del } from '@/api/log'\r\nimport expandRow from './table_expand.vue'\r\nimport { formatDate } from '@/libs/tools'\r\n\r\nconst deleteButton = (vm, h, currentRow, index) => {\r\n  if (vm.buttonShow.del) {\r\n    return h('Poptip', {\r\n      props: {\r\n        confirm: true,\r\n        title: '您确定要删除这条数据吗? ',\r\n        transfer: true\r\n      },\r\n      on: {\r\n        'on-ok': () => {\r\n          del(currentRow.id).then(response => {\r\n            vm.tableData.splice(index, 1)\r\n            vm.$Message.success(response.data.msg)\r\n          })\r\n          currentRow.loading = false\r\n        }\r\n      }\r\n    }, [\r\n      h('Button', {\r\n        style: {\r\n          margin: '0 5px'\r\n        },\r\n        props: {\r\n          type: 'error',\r\n          placement: 'top',\r\n          loading: currentRow.isDeleting\r\n        }\r\n      }, vm.$t('delete_button'))\r\n    ])\r\n  }\r\n}\r\n\r\nexport default {\r\n  name: 'system_user',\r\n  components: { expandRow },\r\n  data () {\r\n    return {\r\n      columnsList: [\r\n        {\r\n          type: 'expand',\r\n          width: 50,\r\n          render: (h, params) => {\r\n            return h(expandRow, {\r\n              props: {\r\n                row: params.row\r\n              }\r\n            })\r\n          }\r\n        },\r\n        {\r\n          title: '行为名称',\r\n          align: 'center',\r\n          key: 'action_name'\r\n        },\r\n        {\r\n          title: '用户ID',\r\n          align: 'center',\r\n          key: 'uid',\r\n          width: 120\r\n        },\r\n        {\r\n          title: '用户昵称',\r\n          align: 'center',\r\n          key: 'nickname',\r\n          width: 100\r\n        },\r\n        {\r\n          title: '操作URL',\r\n          align: 'center',\r\n          key: 'url',\r\n          width: 200\r\n        },\r\n        {\r\n          title: '执行时间',\r\n          align: 'center',\r\n          width: 170,\r\n          render: (h, params) => {\r\n            return h('span', formatDate('Y-m-d H:i:s', params.row.add_time))\r\n          }\r\n        },\r\n        {\r\n          title: '操作',\r\n          align: 'center',\r\n          width: 125,\r\n          render: (h, params) => {\r\n            return h('div', [\r\n              deleteButton(this, h, params.row, params.index)\r\n            ])\r\n          }\r\n        }\r\n      ],\r\n      tableData: [],\r\n      tableShow: {\r\n        currentPage: 1,\r\n        pageSize: 10,\r\n        listCount: 0\r\n      },\r\n      searchConf: {\r\n        type: '',\r\n        keywords: '',\r\n        status: ''\r\n      },\r\n      modalSetting: {\r\n        show: false,\r\n        loading: false,\r\n        index: 0\r\n      },\r\n      buttonShow: {\r\n        del: true\r\n      },\r\n      listLoading: false\r\n    }\r\n  },\r\n  created () {\r\n    let vm = this\r\n    vm.getList()\r\n    vm.hasRule('Log/del').then(res => {\r\n      vm.buttonShow.del = res\r\n    })\r\n  },\r\n  methods: {\r\n    changePage (page) {\r\n      this.tableShow.currentPage = page\r\n      this.getList()\r\n    },\r\n    changeSize (size) {\r\n      this.tableShow.pageSize = size\r\n      this.getList()\r\n    },\r\n    search () {\r\n      this.tableShow.currentPage = 1\r\n      this.getList()\r\n    },\r\n    getList () {\r\n      let vm = this\r\n      let params = {\r\n        page: vm.tableShow.currentPage,\r\n        size: vm.tableShow.pageSize,\r\n        type: vm.searchConf.type,\r\n        keywords: vm.searchConf.keywords\r\n      }\r\n      vm.listLoading = true\r\n      getList(params).then(response => {\r\n        vm.tableData = response.data.data.list\r\n        vm.tableShow.listCount = response.data.data.count\r\n        vm.listLoading = false\r\n      })\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["log.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"log.vue","sourceRoot":"src/view/system","sourcesContent":["<style scoped>\r\n  @import './log.less';\r\n</style>\r\n<template>\r\n  <div>\r\n    <Row>\r\n      <Col span=\"24\">\r\n        <Card class=\"margin-bottom-10\">\r\n          <Form inline>\r\n            <FormItem class=\"margin-bottom-0\">\r\n              <Select v-model=\"searchConf.type\" clearable placeholder=\"请选择类别\" style=\"width:120px\">\r\n                <Option :value=\"1\">操作URL</Option>\r\n                <Option :value=\"2\">用户昵称</Option>\r\n                <Option :value=\"3\">用户ID</Option>\r\n              </Select>\r\n            </FormItem>\r\n            <FormItem class=\"margin-bottom-0\">\r\n              <Input v-model=\"searchConf.keywords\" placeholder=\"\"></Input>\r\n            </FormItem>\r\n            <FormItem class=\"margin-bottom-0\">\r\n              <Button type=\"primary\" @click=\"search\">{{ $t('find_button') }}/{{ $t('refresh_button') }}</Button>\r\n            </FormItem>\r\n          </Form>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col span=\"24\">\r\n        <Card>\r\n          <div>\r\n            <Table :loading=\"listLoading\" :columns=\"columnsList\" :data=\"tableData\" border disabled-hover></Table>\r\n          </div>\r\n          <div class=\"margin-top-15\" style=\"text-align: center\">\r\n            <Page :total=\"tableShow.listCount\" :current=\"tableShow.currentPage\"\r\n                  :page-size=\"tableShow.pageSize\" @on-change=\"changePage\"\r\n                  @on-page-size-change=\"changeSize\" show-elevator show-sizer show-total></Page>\r\n          </div>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { getList, del } from '@/api/log'\r\nimport expandRow from './table_expand.vue'\r\nimport { formatDate } from '@/libs/tools'\r\n\r\nconst deleteButton = (vm, h, currentRow, index) => {\r\n  if (vm.buttonShow.del) {\r\n    return h('Poptip', {\r\n      props: {\r\n        confirm: true,\r\n        title: '您确定要删除这条数据吗? ',\r\n        transfer: true\r\n      },\r\n      on: {\r\n        'on-ok': () => {\r\n          del(currentRow.id).then(response => {\r\n            vm.tableData.splice(index, 1)\r\n            vm.$Message.success(response.data.msg)\r\n          })\r\n          currentRow.loading = false\r\n        }\r\n      }\r\n    }, [\r\n      h('Button', {\r\n        style: {\r\n          margin: '0 5px'\r\n        },\r\n        props: {\r\n          type: 'error',\r\n          placement: 'top',\r\n          loading: currentRow.isDeleting\r\n        }\r\n      }, vm.$t('delete_button'))\r\n    ])\r\n  }\r\n}\r\n\r\nexport default {\r\n  name: 'system_user',\r\n  components: { expandRow },\r\n  data () {\r\n    return {\r\n      columnsList: [\r\n        {\r\n          type: 'expand',\r\n          width: 50,\r\n          render: (h, params) => {\r\n            return h(expandRow, {\r\n              props: {\r\n                row: params.row\r\n              }\r\n            })\r\n          }\r\n        },\r\n        {\r\n          title: '行为名称',\r\n          align: 'center',\r\n          key: 'action_name'\r\n        },\r\n        {\r\n          title: '用户ID',\r\n          align: 'center',\r\n          key: 'uid',\r\n          width: 120\r\n        },\r\n        {\r\n          title: '用户昵称',\r\n          align: 'center',\r\n          key: 'nickname',\r\n          width: 100\r\n        },\r\n        {\r\n          title: '操作URL',\r\n          align: 'center',\r\n          key: 'url',\r\n          width: 200\r\n        },\r\n        {\r\n          title: '执行时间',\r\n          align: 'center',\r\n          width: 170,\r\n          render: (h, params) => {\r\n            return h('span', formatDate('Y-m-d H:i:s', params.row.add_time))\r\n          }\r\n        },\r\n        {\r\n          title: '操作',\r\n          align: 'center',\r\n          width: 125,\r\n          render: (h, params) => {\r\n            return h('div', [\r\n              deleteButton(this, h, params.row, params.index)\r\n            ])\r\n          }\r\n        }\r\n      ],\r\n      tableData: [],\r\n      tableShow: {\r\n        currentPage: 1,\r\n        pageSize: 10,\r\n        listCount: 0\r\n      },\r\n      searchConf: {\r\n        type: '',\r\n        keywords: '',\r\n        status: ''\r\n      },\r\n      modalSetting: {\r\n        show: false,\r\n        loading: false,\r\n        index: 0\r\n      },\r\n      buttonShow: {\r\n        del: true\r\n      },\r\n      listLoading: false\r\n    }\r\n  },\r\n  created () {\r\n    let vm = this\r\n    vm.getList()\r\n    vm.hasRule('Log/del').then(res => {\r\n      vm.buttonShow.del = res\r\n    })\r\n  },\r\n  methods: {\r\n    changePage (page) {\r\n      this.tableShow.currentPage = page\r\n      this.getList()\r\n    },\r\n    changeSize (size) {\r\n      this.tableShow.pageSize = size\r\n      this.getList()\r\n    },\r\n    search () {\r\n      this.tableShow.currentPage = 1\r\n      this.getList()\r\n    },\r\n    getList () {\r\n      let vm = this\r\n      let params = {\r\n        page: vm.tableShow.currentPage,\r\n        size: vm.tableShow.pageSize,\r\n        type: vm.searchConf.type,\r\n        keywords: vm.searchConf.keywords\r\n      }\r\n      vm.listLoading = true\r\n      getList(params).then(response => {\r\n        vm.tableData = response.data.data.list\r\n        vm.tableShow.listCount = response.data.data.count\r\n        vm.listLoading = false\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n"]}]}