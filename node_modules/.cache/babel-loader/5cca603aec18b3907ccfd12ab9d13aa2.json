{"remainingRequest":"E:\\ApiAdmin\\node_modules\\thread-loader\\dist\\cjs.js!E:\\ApiAdmin\\node_modules\\babel-loader\\lib\\index.js!E:\\ApiAdmin\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\ApiAdmin\\src\\store\\module\\user.js","dependencies":[{"path":"E:\\ApiAdmin\\src\\store\\module\\user.js","mtime":1635783328998},{"path":"E:\\ApiAdmin\\.babelrc","mtime":1635783328909},{"path":"E:\\ApiAdmin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1635783567026},{"path":"E:\\ApiAdmin\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1635783565708},{"path":"E:\\ApiAdmin\\node_modules\\babel-loader\\lib\\index.js","mtime":1635783561745},{"path":"E:\\ApiAdmin\\node_modules\\eslint-loader\\index.js","mtime":1635783566509}],"contextDependencies":[],"result":["import { login, logout, getUserInfo as _getUserInfo } from '@/api/user';\nimport { resetRouter } from '@/router';\nimport { setToken as _setToken, getToken } from '@/libs/util';\nimport { filterAsyncRouter } from '@/libs/router-utils';\nexport default {\n  state: {\n    userInfo: {},\n    token: getToken()\n  },\n  mutations: {\n    setUserInfo: function setUserInfo(state, userInfo) {\n      state.userInfo = userInfo;\n    },\n    setToken: function setToken(state, token) {\n      state.token = token;\n\n      _setToken(token);\n    }\n  },\n  actions: {\n    // 登录\n    handleLogin: function handleLogin(_ref, _ref2) {\n      var commit = _ref.commit;\n      var username = _ref2.username,\n          password = _ref2.password;\n      username = username.trim();\n      return new Promise(function (resolve, reject) {\n        login({\n          username: username,\n          password: password\n        }).then(function (res) {\n          sessionStorage.setItem('dynamicRouter', JSON.stringify(res.data.data.menu));\n          commit('setUserInfo', res.data.data);\n          commit('setToken', res.data.data.apiAuth);\n          commit('updateMenuList', filterAsyncRouter(res.data.data.menu));\n          resolve();\n        }).catch(function (err) {\n          reject(err);\n        });\n      });\n    },\n    // 退出登录\n    handleLogOut: function handleLogOut(_ref3) {\n      var state = _ref3.state,\n          commit = _ref3.commit;\n      return new Promise(function (resolve, reject) {\n        logout().then(function () {\n          commit('setToken', '');\n          commit('setUserInfo', {});\n          resetRouter();\n          sessionStorage.removeItem('dynamicRouter');\n          resolve();\n        }).catch(function (err) {\n          reject(err);\n        });\n      });\n    },\n    // 获取用户相关信息\n    getUserInfo: function getUserInfo(_ref4) {\n      var state = _ref4.state,\n          commit = _ref4.commit;\n\n      if (JSON.stringify(state.userInfo) !== '{}') {\n        return state.userInfo;\n      } else {\n        return new Promise(function (resolve, reject) {\n          try {\n            _getUserInfo().then(function (res) {\n              commit('setUserInfo', res.data.data);\n              resolve(res.data.data);\n            }).catch(function (err) {\n              reject(err);\n            });\n          } catch (error) {\n            reject(error);\n          }\n        });\n      }\n    }\n  }\n};",null]}