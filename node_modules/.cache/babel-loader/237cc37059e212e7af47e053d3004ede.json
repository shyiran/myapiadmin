{"remainingRequest":"E:\\ApiAdmin\\node_modules\\babel-loader\\lib\\index.js!E:\\ApiAdmin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\ApiAdmin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\ApiAdmin\\src\\view\\app\\group.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\ApiAdmin\\src\\view\\app\\group.vue","mtime":1635783329000},{"path":"E:\\ApiAdmin\\.babelrc","mtime":1635783328909},{"path":"E:\\ApiAdmin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1635783567026},{"path":"E:\\ApiAdmin\\node_modules\\babel-loader\\lib\\index.js","mtime":1635783561745},{"path":"E:\\ApiAdmin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1635783567026},{"path":"E:\\ApiAdmin\\node_modules\\vue-loader\\lib\\index.js","mtime":1635783560295}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getList as _getList, changeStatus, add, edit, del } from '@/api/app-group';\nimport { getHash } from '@/api/interface';\n\nvar editButton = function editButton(vm, h, currentRow, index) {\n  if (vm.buttonShow.edit) {\n    return h('Button', {\n      props: {\n        type: 'primary'\n      },\n      style: {\n        margin: '0 5px'\n      },\n      on: {\n        'click': function click() {\n          vm.formItem.id = currentRow.id;\n          vm.formItem.name = currentRow.name;\n          vm.formItem.hash = currentRow.hash;\n          vm.formItem.description = currentRow.description;\n          vm.modalSetting.show = true;\n          vm.modalSetting.index = index;\n        }\n      }\n    }, vm.$t('edit_button'));\n  }\n};\n\nvar deleteButton = function deleteButton(vm, h, currentRow, index) {\n  if (vm.buttonShow.del) {\n    return h('Poptip', {\n      props: {\n        confirm: true,\n        title: '您确定要删除这条数据吗? ',\n        transfer: true\n      },\n      on: {\n        'on-ok': function onOk() {\n          del(currentRow.hash).then(function (response) {\n            vm.tableData.splice(index, 1);\n            vm.$Message.success(response.data.msg);\n          });\n        }\n      }\n    }, [h('Button', {\n      style: {\n        margin: '0 5px'\n      },\n      props: {\n        type: 'error',\n        placement: 'top',\n        loading: currentRow.isDeleting\n      }\n    }, vm.$t('delete_button'))]);\n  }\n};\n\nexport default {\n  name: 'interface_group',\n  data: function data() {\n    var _this = this;\n\n    return {\n      columnsList: [{\n        title: '序号',\n        type: 'index',\n        width: 65,\n        align: 'center'\n      }, {\n        title: '应用组名称',\n        align: 'center',\n        key: 'name'\n      }, {\n        title: '应用组描述',\n        align: 'center',\n        key: 'description'\n      }, {\n        title: '应用组标识',\n        align: 'center',\n        key: 'hash',\n        width: 140\n      }, {\n        title: '应用组状态',\n        align: 'center',\n        width: 120,\n        render: function render(h, params) {\n          var vm = _this;\n          return h('i-switch', {\n            attrs: {\n              size: 'large'\n            },\n            props: {\n              'true-value': 1,\n              'false-value': 0,\n              value: params.row.status,\n              disabled: !vm.buttonShow.changeStatus\n            },\n            on: {\n              'on-change': function onChange(status) {\n                changeStatus(status, params.row.id).then(function (response) {\n                  vm.$Message.success(response.data.msg);\n                  vm.getList();\n                });\n              }\n            }\n          }, [h('span', {\n            slot: 'open'\n          }, vm.$t('open_choose')), h('span', {\n            slot: 'close'\n          }, vm.$t('close_choose'))]);\n        }\n      }, {\n        title: '操作',\n        align: 'center',\n        width: 200,\n        render: function render(h, params) {\n          return h('div', [editButton(_this, h, params.row, params.index), deleteButton(_this, h, params.row, params.index)]);\n        }\n      }],\n      tableData: [],\n      tableShow: {\n        currentPage: 1,\n        pageSize: 10,\n        listCount: 0\n      },\n      searchConf: {\n        type: '',\n        keywords: '',\n        status: ''\n      },\n      modalSetting: {\n        show: false,\n        loading: false,\n        index: 0\n      },\n      formItem: {\n        description: '',\n        name: '',\n        hash: '',\n        id: 0\n      },\n      ruleValidate: {\n        name: [{\n          required: true,\n          message: '应用组名称不能为空',\n          trigger: 'blur'\n        }]\n      },\n      buttonShow: {\n        edit: true,\n        del: true,\n        changeStatus: true\n      },\n      listLoading: false\n    };\n  },\n  created: function created() {\n    var vm = this;\n    vm.getList();\n    vm.hasRule('AppGroup/edit').then(function (res) {\n      vm.buttonShow.edit = res;\n    });\n    vm.hasRule('AppGroup/del').then(function (res) {\n      vm.buttonShow.del = res;\n    });\n    vm.hasRule('AppGroup/changeStatus').then(function (res) {\n      vm.buttonShow.changeStatus = res;\n    });\n  },\n  methods: {\n    alertAdd: function alertAdd() {\n      var vm = this;\n      getHash().then(function (response) {\n        vm.formItem.hash = response.data.data.hash;\n      });\n      vm.modalSetting.show = true;\n    },\n    submit: function submit() {\n      var vm = this;\n      vm.$refs['myForm'].validate(function (valid) {\n        if (valid) {\n          vm.modalSetting.loading = true;\n\n          if (vm.formItem.id === 0) {\n            add(vm.formItem).then(function (response) {\n              vm.$Message.success(response.data.msg);\n              vm.getList();\n              vm.cancel();\n            }).catch(function () {\n              vm.modalSetting.loading = false;\n            });\n          } else {\n            edit(vm.formItem).then(function (response) {\n              vm.$Message.success(response.data.msg);\n              vm.getList();\n              vm.cancel();\n            }).catch(function () {\n              vm.modalSetting.loading = false;\n            });\n          }\n        }\n      });\n    },\n    cancel: function cancel() {\n      this.modalSetting.show = false;\n    },\n    changePage: function changePage(page) {\n      this.tableShow.currentPage = page;\n      this.getList();\n    },\n    changeSize: function changeSize(size) {\n      this.tableShow.pageSize = size;\n      this.getList();\n    },\n    search: function search() {\n      this.tableShow.currentPage = 1;\n      this.getList();\n    },\n    getList: function getList() {\n      var vm = this;\n      vm.listLoading = true;\n\n      _getList({\n        page: vm.tableShow.currentPage,\n        size: vm.tableShow.pageSize,\n        type: vm.searchConf.type,\n        keywords: vm.searchConf.keywords,\n        status: vm.searchConf.status\n      }).then(function (response) {\n        vm.tableData = response.data.data.list;\n        vm.tableShow.listCount = response.data.data.count;\n        vm.listLoading = false;\n      });\n    },\n    doCancel: function doCancel(data) {\n      if (!data) {\n        this.formItem.id = 0;\n        this.$refs['myForm'].resetFields();\n        this.modalSetting.loading = false;\n        this.modalSetting.index = 0;\n      }\n    }\n  }\n};",{"version":3,"sources":["group.vue"],"names":[],"mappings":"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","sourcesContent":["<style lang=\"less\" scoped>\r\n  @import './list.less';\r\n</style>\r\n<template>\r\n  <div>\r\n    <Row>\r\n      <Col span=\"24\">\r\n        <Card class=\"margin-bottom-10\">\r\n          <Form inline>\r\n            <FormItem class=\"margin-bottom-0\">\r\n              <Select v-model=\"searchConf.status\" clearable placeholder='请选择状态' style=\"width:120px\">\r\n                <Option :value=\"1\">启用</Option>\r\n                <Option :value=\"0\">禁用</Option>\r\n              </Select>\r\n            </FormItem>\r\n            <FormItem class=\"margin-bottom-0\">\r\n              <Select v-model=\"searchConf.type\" clearable placeholder=\"请选择类别\" style=\"width:120px\">\r\n                <Option :value=\"1\">应用组标识</Option>\r\n                <Option :value=\"2\">应用组名称</Option>\r\n              </Select>\r\n            </FormItem>\r\n            <FormItem class=\"margin-bottom-0\">\r\n              <Input v-model=\"searchConf.keywords\" placeholder=\"\"></Input>\r\n            </FormItem>\r\n            <FormItem class=\"margin-bottom-0\">\r\n              <Button type=\"primary\" @click=\"search\">{{ $t('find_button') }}/{{ $t('refresh_button') }}</Button>\r\n            </FormItem>\r\n          </Form>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col span=\"24\">\r\n        <Card>\r\n          <div class=\"margin-bottom-15\">\r\n            <Button type=\"primary\" v-has=\"'AppGroup/add'\" @click=\"alertAdd\" icon=\"md-add\">{{ $t('add_button') }}</Button>\r\n          </div>\r\n          <div>\r\n            <Table :loading=\"listLoading\" :columns=\"columnsList\" :data=\"tableData\" border disabled-hover></Table>\r\n          </div>\r\n          <div class=\"margin-top-15\" style=\"text-align: center\">\r\n            <Page :total=\"tableShow.listCount\" :current=\"tableShow.currentPage\"\r\n                  :page-size=\"tableShow.pageSize\" @on-change=\"changePage\"\r\n                  @on-page-size-change=\"changeSize\" show-elevator show-sizer show-total></Page>\r\n          </div>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n    <Modal v-model=\"modalSetting.show\" width=\"668\" :styles=\"{top: '30px'}\" @on-visible-change=\"doCancel\">\r\n      <p slot=\"header\" style=\"color:#2d8cf0\">\r\n        <Icon type=\"md-alert\"></Icon>\r\n        <span>{{formItem.id ? '编辑' : '新增'}}应用组</span>\r\n      </p>\r\n      <Form ref=\"myForm\" :rules=\"ruleValidate\" :model=\"formItem\" :label-width=\"80\">\r\n        <FormItem label=\"组名称\" prop=\"name\">\r\n          <Input v-model=\"formItem.name\" placeholder=\"请输入应用组名称\"></Input>\r\n        </FormItem>\r\n        <FormItem label=\"组标识\" prop=\"hash\">\r\n          <Input style=\"width: 300px\" disabled v-model=\"formItem.hash\"></Input>\r\n          <Tag color=\"error\" class=\"margin-left-5\">系统自动生成，不允许修改</Tag>\r\n        </FormItem>\r\n        <FormItem label=\"组描述\" prop=\"description\">\r\n          <Input v-model=\"formItem.description\" :autosize=\"{maxRows: 10, minRows: 4}\" type=\"textarea\"\r\n                 placeholder=\"请输入应用组描述\"></Input>\r\n        </FormItem>\r\n      </Form>\r\n      <div slot=\"footer\">\r\n        <Button type=\"text\" @click=\"cancel\" class=\"margin-right-10\">取消</Button>\r\n        <Button type=\"primary\" @click=\"submit\" :loading=\"modalSetting.loading\">确定</Button>\r\n      </div>\r\n    </Modal>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { getList, changeStatus, add, edit, del } from '@/api/app-group'\r\nimport { getHash } from '@/api/interface'\r\n\r\nconst editButton = (vm, h, currentRow, index) => {\r\n  if (vm.buttonShow.edit) {\r\n    return h('Button', {\r\n      props: {\r\n        type: 'primary'\r\n      },\r\n      style: {\r\n        margin: '0 5px'\r\n      },\r\n      on: {\r\n        'click': () => {\r\n          vm.formItem.id = currentRow.id\r\n          vm.formItem.name = currentRow.name\r\n          vm.formItem.hash = currentRow.hash\r\n          vm.formItem.description = currentRow.description\r\n          vm.modalSetting.show = true\r\n          vm.modalSetting.index = index\r\n        }\r\n      }\r\n    }, vm.$t('edit_button'))\r\n  }\r\n}\r\nconst deleteButton = (vm, h, currentRow, index) => {\r\n  if (vm.buttonShow.del) {\r\n    return h('Poptip', {\r\n      props: {\r\n        confirm: true,\r\n        title: '您确定要删除这条数据吗? ',\r\n        transfer: true\r\n      },\r\n      on: {\r\n        'on-ok': () => {\r\n          del(currentRow.hash).then(response => {\r\n            vm.tableData.splice(index, 1)\r\n            vm.$Message.success(response.data.msg)\r\n          })\r\n        }\r\n      }\r\n    }, [\r\n      h('Button', {\r\n        style: {\r\n          margin: '0 5px'\r\n        },\r\n        props: {\r\n          type: 'error',\r\n          placement: 'top',\r\n          loading: currentRow.isDeleting\r\n        }\r\n      }, vm.$t('delete_button'))\r\n    ])\r\n  }\r\n}\r\n\r\nexport default {\r\n  name: 'interface_group',\r\n  data () {\r\n    return {\r\n      columnsList: [\r\n        {\r\n          title: '序号',\r\n          type: 'index',\r\n          width: 65,\r\n          align: 'center'\r\n        },\r\n        {\r\n          title: '应用组名称',\r\n          align: 'center',\r\n          key: 'name'\r\n        },\r\n        {\r\n          title: '应用组描述',\r\n          align: 'center',\r\n          key: 'description'\r\n        },\r\n        {\r\n          title: '应用组标识',\r\n          align: 'center',\r\n          key: 'hash',\r\n          width: 140\r\n        },\r\n        {\r\n          title: '应用组状态',\r\n          align: 'center',\r\n          width: 120,\r\n          render: (h, params) => {\r\n            let vm = this\r\n            return h('i-switch', {\r\n              attrs: {\r\n                size: 'large'\r\n              },\r\n              props: {\r\n                'true-value': 1,\r\n                'false-value': 0,\r\n                value: params.row.status,\r\n                disabled: !vm.buttonShow.changeStatus\r\n              },\r\n              on: {\r\n                'on-change': function (status) {\r\n                  changeStatus(status, params.row.id).then(response => {\r\n                    vm.$Message.success(response.data.msg)\r\n                    vm.getList()\r\n                  })\r\n                }\r\n              }\r\n            }, [\r\n              h('span', {\r\n                slot: 'open'\r\n              }, vm.$t('open_choose')),\r\n              h('span', {\r\n                slot: 'close'\r\n              }, vm.$t('close_choose'))\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          title: '操作',\r\n          align: 'center',\r\n          width: 200,\r\n          render: (h, params) => {\r\n            return h('div', [\r\n              editButton(this, h, params.row, params.index),\r\n              deleteButton(this, h, params.row, params.index)\r\n            ])\r\n          }\r\n        }\r\n      ],\r\n      tableData: [],\r\n      tableShow: {\r\n        currentPage: 1,\r\n        pageSize: 10,\r\n        listCount: 0\r\n      },\r\n      searchConf: {\r\n        type: '',\r\n        keywords: '',\r\n        status: ''\r\n      },\r\n      modalSetting: {\r\n        show: false,\r\n        loading: false,\r\n        index: 0\r\n      },\r\n      formItem: {\r\n        description: '',\r\n        name: '',\r\n        hash: '',\r\n        id: 0\r\n      },\r\n      ruleValidate: {\r\n        name: [\r\n          { required: true, message: '应用组名称不能为空', trigger: 'blur' }\r\n        ]\r\n      },\r\n      buttonShow: {\r\n        edit: true,\r\n        del: true,\r\n        changeStatus: true\r\n      },\r\n      listLoading: false\r\n    }\r\n  },\r\n  created () {\r\n    let vm = this\r\n    vm.getList()\r\n    vm.hasRule('AppGroup/edit').then(res => {\r\n      vm.buttonShow.edit = res\r\n    })\r\n    vm.hasRule('AppGroup/del').then(res => {\r\n      vm.buttonShow.del = res\r\n    })\r\n    vm.hasRule('AppGroup/changeStatus').then(res => {\r\n      vm.buttonShow.changeStatus = res\r\n    })\r\n  },\r\n  methods: {\r\n    alertAdd () {\r\n      let vm = this\r\n      getHash().then(response => {\r\n        vm.formItem.hash = response.data.data.hash\r\n      })\r\n      vm.modalSetting.show = true\r\n    },\r\n    submit () {\r\n      let vm = this\r\n      vm.$refs['myForm'].validate((valid) => {\r\n        if (valid) {\r\n          vm.modalSetting.loading = true\r\n          if (vm.formItem.id === 0) {\r\n            add(vm.formItem).then(response => {\r\n              vm.$Message.success(response.data.msg)\r\n              vm.getList()\r\n              vm.cancel()\r\n            }).catch(() => {\r\n              vm.modalSetting.loading = false\r\n            })\r\n          } else {\r\n            edit(vm.formItem).then(response => {\r\n              vm.$Message.success(response.data.msg)\r\n              vm.getList()\r\n              vm.cancel()\r\n            }).catch(() => {\r\n              vm.modalSetting.loading = false\r\n            })\r\n          }\r\n        }\r\n      })\r\n    },\r\n    cancel () {\r\n      this.modalSetting.show = false\r\n    },\r\n    changePage (page) {\r\n      this.tableShow.currentPage = page\r\n      this.getList()\r\n    },\r\n    changeSize (size) {\r\n      this.tableShow.pageSize = size\r\n      this.getList()\r\n    },\r\n    search () {\r\n      this.tableShow.currentPage = 1\r\n      this.getList()\r\n    },\r\n    getList () {\r\n      let vm = this\r\n      vm.listLoading = true\r\n      getList({\r\n        page: vm.tableShow.currentPage,\r\n        size: vm.tableShow.pageSize,\r\n        type: vm.searchConf.type,\r\n        keywords: vm.searchConf.keywords,\r\n        status: vm.searchConf.status\r\n      }).then(response => {\r\n        vm.tableData = response.data.data.list\r\n        vm.tableShow.listCount = response.data.data.count\r\n        vm.listLoading = false\r\n      })\r\n    },\r\n    doCancel (data) {\r\n      if (!data) {\r\n        this.formItem.id = 0\r\n        this.$refs['myForm'].resetFields()\r\n        this.modalSetting.loading = false\r\n        this.modalSetting.index = 0\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"sourceRoot":"src/view/app"}]}