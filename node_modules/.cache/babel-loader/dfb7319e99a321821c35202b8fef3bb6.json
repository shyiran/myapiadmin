{"remainingRequest":"E:\\ApiAdmin\\node_modules\\thread-loader\\dist\\cjs.js!E:\\ApiAdmin\\node_modules\\babel-loader\\lib\\index.js!E:\\ApiAdmin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\ApiAdmin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\ApiAdmin\\src\\view\\interface\\list.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\ApiAdmin\\src\\view\\interface\\list.vue","mtime":1635783329010},{"path":"E:\\ApiAdmin\\.babelrc","mtime":1635783328909},{"path":"E:\\ApiAdmin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1635783567026},{"path":"E:\\ApiAdmin\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1635783565708},{"path":"E:\\ApiAdmin\\node_modules\\babel-loader\\lib\\index.js","mtime":1635783561745},{"path":"E:\\ApiAdmin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1635783567026},{"path":"E:\\ApiAdmin\\node_modules\\vue-loader\\lib\\index.js","mtime":1635783560295}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getList as _getList, changeStatus, add, edit, del, getHash, refresh } from '@/api/interface';\nimport { getAll } from '@/api/interface-group';\n\nvar editButton = function editButton(vm, h, currentRow, index) {\n  if (vm.buttonShow.edit) {\n    return h('Button', {\n      props: {\n        type: 'primary'\n      },\n      style: {\n        margin: '0 5px'\n      },\n      on: {\n        'click': function click() {\n          vm.formItem.id = currentRow.id;\n          vm.formItem.api_class = currentRow.api_class;\n          vm.formItem.info = currentRow.info;\n          vm.formItem.method = currentRow.method;\n          vm.formItem.hash = currentRow.hash;\n          vm.formItem.group_hash = currentRow.group_hash;\n          vm.formItem.access_token = currentRow.access_token;\n          vm.formItem.is_test = currentRow.is_test;\n          vm.formItem.hash_type = currentRow.hash_type;\n          vm.modalSetting.show = true;\n          vm.modalSetting.index = index;\n        }\n      }\n    }, vm.$t('edit_button'));\n  }\n};\n\nvar deleteButton = function deleteButton(vm, h, currentRow, index) {\n  if (vm.buttonShow.del) {\n    return h('Poptip', {\n      props: {\n        confirm: true,\n        title: '您确定要删除这条数据吗? ',\n        transfer: true\n      },\n      on: {\n        'on-ok': function onOk() {\n          del(currentRow.hash).then(function (response) {\n            currentRow.loading = false;\n            vm.tableData.splice(index, 1);\n            vm.$Message.success(response.data.msg);\n          });\n        }\n      }\n    }, [h('Button', {\n      style: {\n        margin: '0 5px'\n      },\n      props: {\n        type: 'error',\n        placement: 'top',\n        loading: currentRow.isDeleting\n      }\n    }, vm.$t('delete_button'))]);\n  }\n};\n\nvar requestButton = function requestButton(vm, h, currentRow, index) {\n  if (vm.buttonShow.request) {\n    return h('Button', {\n      style: {\n        margin: '0 5px'\n      },\n      props: {\n        type: 'info',\n        placement: 'top',\n        loading: currentRow.isDeleting\n      },\n      on: {\n        click: function click() {\n          var hash = currentRow.hash;\n          vm.$router.push({\n            path: \"request/\".concat(hash)\n          });\n        }\n      }\n    }, '请求参数');\n  }\n};\n\nvar responseButton = function responseButton(vm, h, currentRow, index) {\n  if (vm.buttonShow.response) {\n    return h('Button', {\n      style: {\n        margin: '0 5px'\n      },\n      props: {\n        type: 'warning',\n        placement: 'top',\n        loading: currentRow.isDeleting\n      },\n      on: {\n        click: function click() {\n          var hash = currentRow.hash;\n          vm.$router.push({\n            path: \"response/\".concat(hash)\n          });\n        }\n      }\n    }, '返回参数');\n  }\n};\n\nexport default {\n  name: 'interface_list',\n  data: function data() {\n    var _this = this;\n\n    return {\n      confirmRefresh: false,\n      refreshLoading: false,\n      columnsList: [{\n        title: '序号',\n        type: 'index',\n        width: 65,\n        align: 'center'\n      }, {\n        title: '接口名称',\n        align: 'center',\n        minWidth: 190,\n        key: 'info'\n      }, {\n        title: '真实类库',\n        align: 'center',\n        key: 'api_class',\n        width: 230\n      }, {\n        title: '接口映射',\n        align: 'center',\n        key: 'hash',\n        width: 140\n      }, {\n        title: '请求方式',\n        align: 'center',\n        width: 95,\n        render: function render(h, params) {\n          if (params.row.isTest === 1) {\n            return h('tag', {\n              attrs: {\n                color: 'error'\n              }\n            }, '测试');\n          } else {\n            switch (params.row.method) {\n              case 1:\n                return h('Tag', {\n                  attrs: {\n                    color: 'success'\n                  }\n                }, 'POST');\n\n              case 2:\n                return h('Tag', {\n                  attrs: {\n                    color: 'primary'\n                  }\n                }, 'GET');\n\n              case 0:\n                return h('Tag', {\n                  attrs: {\n                    color: 'warning'\n                  }\n                }, '不限');\n            }\n          }\n        }\n      }, {\n        title: '接口状态',\n        align: 'center',\n        width: 130,\n        render: function render(h, params) {\n          var vm = _this;\n          return h('i-switch', {\n            attrs: {\n              size: 'large'\n            },\n            props: {\n              'true-value': 1,\n              'false-value': 0,\n              value: params.row.status,\n              disabled: !vm.buttonShow.changeStatus\n            },\n            on: {\n              'on-change': function onChange(status) {\n                changeStatus(status, params.row.hash).then(function (response) {\n                  vm.$Message.success(response.data.msg);\n                  vm.getList();\n                });\n              }\n            }\n          }, [h('span', {\n            slot: 'open'\n          }, vm.$t('open_choose')), h('span', {\n            slot: 'close'\n          }, vm.$t('close_choose'))]);\n        }\n      }, {\n        title: '操作',\n        align: 'center',\n        minWidth: 375,\n        render: function render(h, params) {\n          return h('div', [editButton(_this, h, params.row, params.index), requestButton(_this, h, params.row, params.index), responseButton(_this, h, params.row, params.index), deleteButton(_this, h, params.row, params.index)]);\n        }\n      }],\n      tableData: [],\n      apiGroup: [],\n      tableShow: {\n        currentPage: 1,\n        pageSize: 10,\n        listCount: 0\n      },\n      searchConf: {\n        type: '',\n        keywords: '',\n        status: ''\n      },\n      modalSetting: {\n        show: false,\n        loading: false,\n        index: 0\n      },\n      formItem: {\n        api_class: '',\n        info: '',\n        group_hash: 'default',\n        method: 2,\n        hash_type: 2,\n        hash: '',\n        access_token: 0,\n        is_test: 0,\n        id: 0\n      },\n      ruleValidate: {\n        api_class: [{\n          required: true,\n          message: '真实类库不能为空',\n          trigger: 'blur'\n        }],\n        info: [{\n          required: true,\n          message: '接口名称不能为空',\n          trigger: 'blur'\n        }]\n      },\n      buttonShow: {\n        edit: true,\n        request: true,\n        response: true,\n        del: true,\n        changeStatus: true\n      },\n      listLoading: false\n    };\n  },\n  created: function created() {\n    var vm = this;\n    vm.getList();\n    vm.hasRule('InterfaceList/edit').then(function (res) {\n      vm.buttonShow.edit = res;\n    });\n    vm.hasRule('InterfaceList/del').then(function (res) {\n      vm.buttonShow.del = res;\n    });\n    vm.hasRule('InterfaceList/changeStatus').then(function (res) {\n      vm.buttonShow.changeStatus = res;\n    });\n    vm.hasRule('Fields/response').then(function (res) {\n      vm.buttonShow.response = res;\n    });\n    vm.hasRule('Fields/request').then(function (res) {\n      vm.buttonShow.request = res;\n    });\n    getAll().then(function (response) {\n      vm.apiGroup = response.data.data.list;\n    });\n  },\n  activated: function activated() {\n    var vm = this;\n    getAll().then(function (response) {\n      vm.apiGroup = response.data.data.list;\n    });\n  },\n  methods: {\n    alertAdd: function alertAdd() {\n      var vm = this;\n      getHash().then(function (response) {\n        vm.formItem.hash = response.data.data.hash;\n      });\n      vm.modalSetting.show = true;\n    },\n    submit: function submit() {\n      var vm = this;\n      this.$refs['myForm'].validate(function (valid) {\n        if (valid) {\n          vm.modalSetting.loading = true;\n\n          if (vm.formItem.id === 0) {\n            add(vm.formItem).then(function (response) {\n              vm.modalSetting.loading = false;\n              vm.$Message.success(response.data.msg);\n              vm.getList();\n              vm.cancel();\n            }).catch(function () {\n              vm.modalSetting.loading = false;\n            });\n          } else {\n            edit(vm.formItem).then(function (response) {\n              vm.modalSetting.loading = false;\n              vm.$Message.success(response.data.msg);\n              vm.getList();\n              vm.cancel();\n            }).catch(function () {\n              vm.modalSetting.loading = false;\n            });\n          }\n        }\n      });\n    },\n    cancel: function cancel() {\n      this.modalSetting.show = false;\n    },\n    changePage: function changePage(page) {\n      this.tableShow.currentPage = page;\n      this.getList();\n    },\n    changeSize: function changeSize(size) {\n      this.tableShow.pageSize = size;\n      this.getList();\n    },\n    search: function search() {\n      this.tableShow.currentPage = 1;\n      this.getList();\n    },\n    getList: function getList() {\n      var vm = this;\n      vm.listLoading = true;\n\n      _getList({\n        page: vm.tableShow.currentPage,\n        size: vm.tableShow.pageSize,\n        type: vm.searchConf.type,\n        keywords: vm.searchConf.keywords,\n        status: vm.searchConf.status\n      }).then(function (response) {\n        vm.tableData = response.data.data.list;\n        vm.tableShow.listCount = response.data.data.count;\n        vm.listLoading = false;\n      });\n    },\n    doCancel: function doCancel(data) {\n      if (!data) {\n        this.formItem.id = 0;\n        this.$refs['myForm'].resetFields();\n        this.modalSetting.loading = false;\n        this.modalSetting.index = 0;\n      }\n    },\n    refreshRoute: function refreshRoute() {\n      var vm = this;\n      vm.refreshLoading = true;\n      refresh().then(function (response) {\n        vm.$Message.success(response.data.msg);\n        vm.confirmRefresh = false;\n        vm.refreshLoading = false;\n      }).catch(function () {\n        vm.confirmRefresh = false;\n        vm.refreshLoading = false;\n      });\n    }\n  }\n};",null]}