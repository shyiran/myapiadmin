{"remainingRequest":"E:\\ApiAdmin\\node_modules\\thread-loader\\dist\\cjs.js!E:\\ApiAdmin\\node_modules\\babel-loader\\lib\\index.js!E:\\ApiAdmin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\ApiAdmin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\ApiAdmin\\src\\view\\system\\log.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\ApiAdmin\\src\\view\\system\\log.vue","mtime":1635783329024},{"path":"E:\\ApiAdmin\\.babelrc","mtime":1635783328909},{"path":"E:\\ApiAdmin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1635783567026},{"path":"E:\\ApiAdmin\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1635783565708},{"path":"E:\\ApiAdmin\\node_modules\\babel-loader\\lib\\index.js","mtime":1635783561745},{"path":"E:\\ApiAdmin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1635783567026},{"path":"E:\\ApiAdmin\\node_modules\\vue-loader\\lib\\index.js","mtime":1635783560295}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getList as _getList, del } from '@/api/log';\nimport expandRow from \"./table_expand.vue\";\nimport { formatDate } from '@/libs/tools';\n\nvar deleteButton = function deleteButton(vm, h, currentRow, index) {\n  if (vm.buttonShow.del) {\n    return h('Poptip', {\n      props: {\n        confirm: true,\n        title: '您确定要删除这条数据吗? ',\n        transfer: true\n      },\n      on: {\n        'on-ok': function onOk() {\n          del(currentRow.id).then(function (response) {\n            vm.tableData.splice(index, 1);\n            vm.$Message.success(response.data.msg);\n          });\n          currentRow.loading = false;\n        }\n      }\n    }, [h('Button', {\n      style: {\n        margin: '0 5px'\n      },\n      props: {\n        type: 'error',\n        placement: 'top',\n        loading: currentRow.isDeleting\n      }\n    }, vm.$t('delete_button'))]);\n  }\n};\n\nexport default {\n  name: 'system_user',\n  components: {\n    expandRow: expandRow\n  },\n  data: function data() {\n    var _this = this;\n\n    return {\n      columnsList: [{\n        type: 'expand',\n        width: 50,\n        render: function render(h, params) {\n          return h(expandRow, {\n            props: {\n              row: params.row\n            }\n          });\n        }\n      }, {\n        title: '行为名称',\n        align: 'center',\n        key: 'action_name'\n      }, {\n        title: '用户ID',\n        align: 'center',\n        key: 'uid',\n        width: 120\n      }, {\n        title: '用户昵称',\n        align: 'center',\n        key: 'nickname',\n        width: 100\n      }, {\n        title: '操作URL',\n        align: 'center',\n        key: 'url',\n        width: 200\n      }, {\n        title: '执行时间',\n        align: 'center',\n        width: 170,\n        render: function render(h, params) {\n          return h('span', formatDate('Y-m-d H:i:s', params.row.add_time));\n        }\n      }, {\n        title: '操作',\n        align: 'center',\n        width: 125,\n        render: function render(h, params) {\n          return h('div', [deleteButton(_this, h, params.row, params.index)]);\n        }\n      }],\n      tableData: [],\n      tableShow: {\n        currentPage: 1,\n        pageSize: 10,\n        listCount: 0\n      },\n      searchConf: {\n        type: '',\n        keywords: '',\n        status: ''\n      },\n      modalSetting: {\n        show: false,\n        loading: false,\n        index: 0\n      },\n      buttonShow: {\n        del: true\n      },\n      listLoading: false\n    };\n  },\n  created: function created() {\n    var vm = this;\n    vm.getList();\n    vm.hasRule('Log/del').then(function (res) {\n      vm.buttonShow.del = res;\n    });\n  },\n  methods: {\n    changePage: function changePage(page) {\n      this.tableShow.currentPage = page;\n      this.getList();\n    },\n    changeSize: function changeSize(size) {\n      this.tableShow.pageSize = size;\n      this.getList();\n    },\n    search: function search() {\n      this.tableShow.currentPage = 1;\n      this.getList();\n    },\n    getList: function getList() {\n      var vm = this;\n      var params = {\n        page: vm.tableShow.currentPage,\n        size: vm.tableShow.pageSize,\n        type: vm.searchConf.type,\n        keywords: vm.searchConf.keywords\n      };\n      vm.listLoading = true;\n\n      _getList(params).then(function (response) {\n        vm.tableData = response.data.data.list;\n        vm.tableShow.listCount = response.data.data.count;\n        vm.listLoading = false;\n      });\n    }\n  }\n};",null]}