{"remainingRequest":"E:\\ApiAdmin\\node_modules\\babel-loader\\lib\\index.js!E:\\ApiAdmin\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\ApiAdmin\\src\\router\\index.js","dependencies":[{"path":"E:\\ApiAdmin\\src\\router\\index.js","mtime":1635783328994},{"path":"E:\\ApiAdmin\\.babelrc","mtime":1635783328909},{"path":"E:\\ApiAdmin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1635783567026},{"path":"E:\\ApiAdmin\\node_modules\\babel-loader\\lib\\index.js","mtime":1635783561745},{"path":"E:\\ApiAdmin\\node_modules\\eslint-loader\\index.js","mtime":1635783566509}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport Vue from 'vue';\nimport Router from 'vue-router';\nimport routes from \"./routers\";\nimport store from '@/store';\nimport iView from 'view-design';\nimport { setToken, getToken, setTitle } from '@/libs/util';\nimport { oneOf } from '@/libs/tools';\nVue.use(Router);\n\nvar createRouter = function createRouter() {\n  return new Router({\n    routes: routes\n  });\n};\n\nvar router = createRouter();\nrouter.beforeEach(function (to, from, next) {\n  iView.LoadingBar.start();\n  var token = getToken();\n\n  if (to.name.indexOf('wiki_') === -1) {\n    if (!token && to.name !== 'login') {\n      // 未登录且要跳转的页面不是登录页\n      next({\n        name: 'login'\n      });\n    } else if (!token && to.name === 'login') {\n      // 未登陆且要跳转的页面是登录页\n      next();\n    } else if (token && to.name === 'login') {\n      // 已登录且要跳转的页面是登录页\n      next({\n        name: 'home'\n      });\n    } else {\n      store.dispatch('getUserInfo').then(function (user) {\n        // 路由中有相关配置才会识别并且鉴权，否则认为不需要鉴权\n        if (to.meta && to.meta.access) {\n          if (oneOf(to.meta.access, user.access)) {\n            // 有权限，可访问\n            next();\n          } else {\n            // 无权限，重定向到401页面\n            next({\n              replace: true,\n              name: 'error_401'\n            });\n          }\n        } else {\n          next();\n        }\n      }).catch(function () {\n        setToken('');\n        next({\n          name: 'login'\n        });\n      });\n    }\n  } else {\n    if (!token && to.name !== 'wiki_login') {\n      // 未登录且要跳转的页面不是登录页\n      next({\n        name: 'wiki_login'\n      });\n    } else if (!token && to.name === 'wiki_login') {\n      // 未登陆且要跳转的页面是登录页\n      next();\n    } else if (token && to.name === 'wiki_login') {\n      // 已登录且要跳转的页面是登录页\n      next({\n        name: 'wiki_list'\n      });\n    } else {\n      next();\n    }\n  }\n});\nrouter.afterEach(function (to) {\n  setTitle(to, router.app);\n  iView.LoadingBar.finish();\n  window.scrollTo(0, 0);\n});\nexport function resetRouter() {\n  var newRouter = createRouter();\n  router.matcher = newRouter.matcher; // the relevant part\n}\nexport default router;",{"version":3,"sources":["E:/ApiAdmin/src/router/index.js"],"names":["Vue","Router","routes","store","iView","setToken","getToken","setTitle","oneOf","use","createRouter","router","beforeEach","to","from","next","LoadingBar","start","token","name","indexOf","dispatch","then","user","meta","access","replace","catch","afterEach","app","finish","window","scrollTo","resetRouter","newRouter","matcher"],"mappings":"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","sourcesContent":["import Vue from 'vue'\r\nimport Router from 'vue-router'\r\nimport routes from './routers'\r\nimport store from '@/store'\r\nimport iView from 'view-design'\r\nimport { setToken, getToken, setTitle } from '@/libs/util'\r\nimport { oneOf } from '@/libs/tools'\r\n\r\nVue.use(Router)\r\nconst createRouter = () => new Router({\r\n  routes\r\n})\r\n\r\nconst router = createRouter()\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n  iView.LoadingBar.start()\r\n  const token = getToken()\r\n  if (to.name.indexOf('wiki_') === -1) {\r\n    if (!token && to.name !== 'login') {\r\n      // 未登录且要跳转的页面不是登录页\r\n      next({\r\n        name: 'login'\r\n      })\r\n    } else if (!token && to.name === 'login') {\r\n      // 未登陆且要跳转的页面是登录页\r\n      next()\r\n    } else if (token && to.name === 'login') {\r\n      // 已登录且要跳转的页面是登录页\r\n      next({\r\n        name: 'home'\r\n      })\r\n    } else {\r\n      store.dispatch('getUserInfo').then(user => {\r\n        // 路由中有相关配置才会识别并且鉴权，否则认为不需要鉴权\r\n        if (to.meta && to.meta.access) {\r\n          if (oneOf(to.meta.access, user.access)) {\r\n            // 有权限，可访问\r\n            next()\r\n          } else {\r\n            // 无权限，重定向到401页面\r\n            next({ replace: true, name: 'error_401' })\r\n          }\r\n        } else {\r\n          next()\r\n        }\r\n      }).catch(() => {\r\n        setToken('')\r\n        next({\r\n          name: 'login'\r\n        })\r\n      })\r\n    }\r\n  } else {\r\n    if (!token && to.name !== 'wiki_login') {\r\n      // 未登录且要跳转的页面不是登录页\r\n      next({\r\n        name: 'wiki_login'\r\n      })\r\n    } else if (!token && to.name === 'wiki_login') {\r\n      // 未登陆且要跳转的页面是登录页\r\n      next()\r\n    } else if (token && to.name === 'wiki_login') {\r\n      // 已登录且要跳转的页面是登录页\r\n      next({\r\n        name: 'wiki_list'\r\n      })\r\n    } else {\r\n      next()\r\n    }\r\n  }\r\n})\r\n\r\nrouter.afterEach(to => {\r\n  setTitle(to, router.app)\r\n  iView.LoadingBar.finish()\r\n  window.scrollTo(0, 0)\r\n})\r\n\r\nexport function resetRouter () {\r\n  const newRouter = createRouter()\r\n  router.matcher = newRouter.matcher // the relevant part\r\n}\r\n\r\nexport default router\r\n"]}]}