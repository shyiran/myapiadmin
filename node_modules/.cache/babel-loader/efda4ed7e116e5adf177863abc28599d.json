{"remainingRequest":"E:\\ApiAdmin\\node_modules\\thread-loader\\dist\\cjs.js!E:\\ApiAdmin\\node_modules\\babel-loader\\lib\\index.js!E:\\ApiAdmin\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\ApiAdmin\\src\\libs\\wiki.request.js","dependencies":[{"path":"E:\\ApiAdmin\\src\\libs\\wiki.request.js","mtime":1635783328984},{"path":"E:\\ApiAdmin\\.babelrc","mtime":1635783328909},{"path":"E:\\ApiAdmin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1635783567026},{"path":"E:\\ApiAdmin\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1635783565708},{"path":"E:\\ApiAdmin\\node_modules\\babel-loader\\lib\\index.js","mtime":1635783561745},{"path":"E:\\ApiAdmin\\node_modules\\eslint-loader\\index.js","mtime":1635783566509}],"contextDependencies":[],"result":["import _classCallCheck from \"E:/ApiAdmin/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:/ApiAdmin/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport config from '@/config';\nimport axios from 'axios';\nimport iView from 'view-design';\nimport { setToken, getToken } from '@/libs/util';\nimport router from '@/router';\nexport var baseUrl = (process.env.NODE_ENV === 'development' ? config.baseUrl.dev : config.baseUrl.pro) + 'wiki/';\n\nvar HttpRequest = /*#__PURE__*/function () {\n  function HttpRequest(baseUrl) {\n    _classCallCheck(this, HttpRequest);\n\n    this.baseUrl = baseUrl;\n  }\n\n  _createClass(HttpRequest, [{\n    key: \"interceptors\",\n    value: function interceptors(instance) {\n      // 请求拦截\n      instance.interceptors.request.use(function (config) {\n        return config;\n      }, function (error) {\n        return Promise.reject(error);\n      }); // 响应拦截\n\n      instance.interceptors.response.use(function (res) {\n        var data = res.data,\n            status = res.status;\n\n        if (data.code !== 1) {\n          if (data.code === -14) {\n            setToken('');\n            router.push({\n              name: 'wiki_login'\n            });\n          } else {\n            iView.Message.error(data.msg);\n          }\n\n          throw new Error(data.msg);\n        } else {\n          return {\n            data: data,\n            status: status\n          };\n        }\n      }, function (error) {\n        return Promise.reject(error);\n      });\n    }\n  }, {\n    key: \"request\",\n    value: function request(options) {\n      var instance = axios.create();\n      var apiAuth = getToken();\n\n      if (apiAuth === false) {\n        options = Object.assign({\n          baseURL: this.baseUrl,\n          headers: {}\n        }, options);\n      } else {\n        options = Object.assign({\n          baseURL: this.baseUrl,\n          headers: {\n            'Api-Auth': apiAuth\n          }\n        }, options);\n      }\n\n      this.interceptors(instance);\n      return instance(options);\n    }\n  }]);\n\n  return HttpRequest;\n}();\n\nvar api_axios = new HttpRequest(baseUrl);\nexport default api_axios;",null]}