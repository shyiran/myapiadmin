{"remainingRequest":"E:\\ApiAdmin\\node_modules\\thread-loader\\dist\\cjs.js!E:\\ApiAdmin\\node_modules\\babel-loader\\lib\\index.js!E:\\ApiAdmin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\ApiAdmin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\ApiAdmin\\src\\view\\interface\\response.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\ApiAdmin\\src\\view\\interface\\response.vue","mtime":1635783329012},{"path":"E:\\ApiAdmin\\.babelrc","mtime":1635783328909},{"path":"E:\\ApiAdmin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1635783567026},{"path":"E:\\ApiAdmin\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1635783565708},{"path":"E:\\ApiAdmin\\node_modules\\babel-loader\\lib\\index.js","mtime":1635783561745},{"path":"E:\\ApiAdmin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1635783567026},{"path":"E:\\ApiAdmin\\node_modules\\vue-loader\\lib\\index.js","mtime":1635783560295}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getResponse, edit, del, upJson } from '@/api/fields';\n\nvar editButton = function editButton(vm, h, currentRow, index) {\n  return h('Button', {\n    props: {\n      type: 'primary'\n    },\n    style: {\n      margin: '0 5px'\n    },\n    on: {\n      'click': function click() {\n        vm.formItem.id = currentRow.id;\n        vm.formItem.field_name = currentRow.show_name;\n        vm.formItem.data_type = currentRow.data_type.toString();\n        vm.formItem.defaults = currentRow.default;\n        vm.formItem.range = currentRow.range;\n        vm.formItem.is_must = currentRow.is_must.toString();\n        vm.formItem.info = currentRow.info;\n        vm.modalSetting.show = true;\n        vm.modalSetting.index = index;\n      }\n    }\n  }, vm.$t('edit_button'));\n};\n\nvar deleteButton = function deleteButton(vm, h, currentRow, index) {\n  return h('Poptip', {\n    props: {\n      confirm: true,\n      title: '您确定要删除这条数据吗? ',\n      transfer: true\n    },\n    on: {\n      'on-ok': function onOk() {\n        del(currentRow.id).then(function (response) {\n          currentRow.loading = false;\n          vm.tableData.splice(index, 1);\n          vm.$Message.success(response.data.msg);\n        });\n      }\n    }\n  }, [h('Button', {\n    style: {\n      margin: '0 5px'\n    },\n    props: {\n      type: 'error',\n      placement: 'top',\n      loading: currentRow.isDeleting\n    }\n  }, vm.$t('delete_button'))]);\n};\n\nexport default {\n  name: 'interface_response',\n  data: function data() {\n    var _this = this;\n\n    return {\n      hash: '',\n      columnsList: [{\n        title: '序号',\n        type: 'index',\n        width: 65,\n        align: 'center'\n      }, {\n        title: '字段名称',\n        align: 'left',\n        key: 'show_name',\n        width: 200\n      }, {\n        title: '数据类型',\n        align: 'center',\n        width: 100,\n        render: function render(h, params) {\n          var type = params.row.data_type;\n          return h('Tag', {\n            attrs: {\n              color: 'primary'\n            }\n          }, _this.tableShow.dataType[type]);\n        }\n      }, {\n        title: '是否必须',\n        align: 'center',\n        width: 100,\n        render: function render(h, params) {\n          if (params.row.is_must === 1) {\n            return h('Tag', {\n              attrs: {\n                color: 'error'\n              }\n            }, '必填');\n          } else {\n            return h('Tag', {\n              attrs: {\n                color: 'primary'\n              }\n            }, '可选');\n          }\n        }\n      }, {\n        title: '默认值',\n        align: 'center',\n        key: 'default',\n        width: 160\n      }, {\n        title: '字段说明',\n        align: 'left',\n        key: 'info'\n      }, {\n        title: '操作',\n        align: 'center',\n        width: 205,\n        render: function render(h, params) {\n          return h('div', [editButton(_this, h, params.row, params.index), deleteButton(_this, h, params.row, params.index)]);\n        }\n      }],\n      tableData: [],\n      tableShow: {\n        currentPage: 1,\n        pageSize: 10,\n        listCount: 0,\n        dataType: {}\n      },\n      apiInfo: {},\n      modalSetting: {\n        show: false,\n        loading: false,\n        index: 0\n      },\n      uploadModal: {\n        show: false,\n        loading: false,\n        index: 0\n      },\n      formItem: {\n        field_name: '',\n        data_type: '2',\n        defaults: '',\n        range: '',\n        is_must: '1',\n        info: '',\n        type: 1,\n        id: 0\n      },\n      uploadItem: {\n        jsonStr: '',\n        type: 1\n      },\n      ruleValidate: {\n        field_name: [{\n          required: true,\n          message: '字段名称不能为空',\n          trigger: 'blur'\n        }]\n      },\n      uploadValidate: {\n        jsonStr: [{\n          required: true,\n          message: '数据模板不能为空',\n          trigger: 'blur'\n        }]\n      },\n      listLoading: false\n    };\n  },\n  created: function created() {\n    this.hash = this.$route.params.hash.toString();\n    this.getList();\n  },\n  activated: function activated() {\n    this.hash = this.$route.params.hash.toString();\n    this.getList();\n  },\n  methods: {\n    alertUpload: function alertUpload() {\n      this.uploadModal.show = true;\n    },\n    submit: function submit() {\n      this.formItem.hash = this.hash;\n      var vm = this;\n      this.$refs['myForm'].validate(function (valid) {\n        if (valid) {\n          vm.modalSetting.loading = true;\n          edit(vm.formItem).then(function (response) {\n            vm.$Message.success(response.data.msg);\n            vm.getList();\n            vm.cancel();\n          }).catch(function () {\n            vm.modalSetting.loading = false;\n          });\n        }\n      });\n    },\n    submitUpload: function submitUpload() {\n      this.uploadItem.hash = this.hash;\n      var vm = this;\n      this.$refs['uploadForm'].validate(function (valid) {\n        if (valid) {\n          vm.uploadModal.loading = true;\n          upJson(vm.uploadItem).then(function (response) {\n            vm.$Message.success(response.data.msg);\n            vm.getList();\n            vm.cancelUpload();\n          }).catch(function () {\n            vm.uploadModal.loading = false;\n          });\n        }\n      });\n    },\n    cancel: function cancel() {\n      this.modalSetting.show = false;\n    },\n    cancelUpload: function cancelUpload() {\n      this.uploadModal.show = false;\n    },\n    changePage: function changePage(page) {\n      this.tableShow.currentPage = page;\n      this.getList();\n    },\n    changeSize: function changeSize(size) {\n      this.tableShow.pageSize = size;\n      this.getList();\n    },\n    search: function search() {\n      this.tableShow.currentPage = 1;\n      this.getList();\n    },\n    getList: function getList() {\n      var vm = this;\n      vm.listLoading = true;\n      getResponse({\n        page: vm.tableShow.currentPage,\n        size: vm.tableShow.pageSize,\n        hash: vm.hash\n      }).then(function (response) {\n        vm.tableData = response.data.data.list;\n        vm.tableShow.listCount = response.data.data.count;\n        vm.tableShow.dataType = response.data.data.dataType;\n        vm.apiInfo = response.data.data.apiInfo;\n        vm.listLoading = false;\n      });\n    },\n    doCancel: function doCancel(data) {\n      if (!data) {\n        this.formItem.id = 0;\n        this.formItem.defaults = '';\n        this.formItem.isMust = '1';\n        this.$refs['myForm'].resetFields();\n        this.modalSetting.loading = false;\n        this.modalSetting.index = 0;\n      }\n    },\n    doUploadCancel: function doUploadCancel(data) {\n      if (!data) {\n        this.uploadItem.jsonStr = '';\n        this.uploadModal.loading = false;\n      }\n    }\n  }\n};",null]}