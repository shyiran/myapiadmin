{"remainingRequest":"E:\\ApiAdmin\\node_modules\\babel-loader\\lib\\index.js!E:\\ApiAdmin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\ApiAdmin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\ApiAdmin\\src\\view\\wiki\\list.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\ApiAdmin\\src\\view\\wiki\\list.vue","mtime":1635783329031},{"path":"E:\\ApiAdmin\\.babelrc","mtime":1635783328909},{"path":"E:\\ApiAdmin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1635783567026},{"path":"E:\\ApiAdmin\\node_modules\\babel-loader\\lib\\index.js","mtime":1635783561745},{"path":"E:\\ApiAdmin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1635783567026},{"path":"E:\\ApiAdmin\\node_modules\\vue-loader\\lib\\index.js","mtime":1635783560295}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport \"./list.less\";\nimport { apiGroup, detail, logout as _logout } from '@/api/wiki';\nimport { setToken } from '@/libs/util';\nimport ABackTop from '@/components/main/components/a-back-top';\nexport default {\n  name: 'wiki',\n  components: {\n    ABackTop: ABackTop\n  },\n  data: function data() {\n    var _this = this;\n\n    return {\n      show_detail: false,\n      show_loading: false,\n      app_id: sessionStorage.getItem('ApiAdmin_AppInfo'),\n      code: '',\n      url: '',\n      groupInfo: [],\n      header_columns: [{\n        title: '参数名称',\n        key: 'field_name'\n      }, {\n        title: '类型',\n        render: function render(h, params) {\n          return h('Tag', {\n            props: {\n              'color': 'blue'\n            }\n          }, _this.detail_info.dataType[params.row.data_type]);\n        }\n      }, {\n        title: '字段状态',\n        render: function render(h, params) {\n          if (params.row.is_must === 1) {\n            return h('Tag', {\n              props: {\n                'color': 'red'\n              }\n            }, '复杂认证');\n          } else {\n            return h('Tag', {\n              props: {\n                'color': 'blue'\n              }\n            }, '简易认证');\n          }\n        }\n      }, {\n        title: '字段说明',\n        key: 'info',\n        width: 290,\n        render: function render(h, params) {\n          var text = params.row.info.substring(0, 20) + '...';\n\n          if (params.row.info.length >= 20) {\n            return h('Tooltip', {\n              props: {\n                transfer: true,\n                maxWidth: 200\n              }\n            }, [text, h('div', {\n              slot: 'content',\n              style: {\n                whiteSpace: 'normal',\n                wordBreak: 'break-all',\n                wordWrap: 'break-word'\n              }\n            }, params.row.info)]);\n          } else {\n            return h('span', params.row.info);\n          }\n        }\n      }],\n      request_columns: [{\n        title: '字段名称',\n        key: 'field_name'\n      }, {\n        title: '类型',\n        width: 100,\n        render: function render(h, params) {\n          return h('Tag', {\n            props: {\n              'color': 'blue'\n            }\n          }, _this.detail_info.dataType[params.row.data_type]);\n        }\n      }, {\n        title: '字段属性',\n        width: 100,\n        render: function render(h, params) {\n          if (params.row.is_must === 1) {\n            return h('Tag', {\n              props: {\n                'color': 'red'\n              }\n            }, '必填');\n          } else {\n            return h('Tag', {\n              props: {\n                'color': 'orange'\n              }\n            }, '选填');\n          }\n        }\n      }, {\n        title: '默认值',\n        key: 'default'\n      }, {\n        title: '字段说明',\n        key: 'info',\n        width: 290,\n        render: function render(h, params) {\n          var text = params.row.info.substring(0, 20) + '...';\n\n          if (params.row.info.length >= 20) {\n            return h('Tooltip', {\n              props: {\n                transfer: true,\n                maxWidth: 200\n              }\n            }, [text, h('div', {\n              slot: 'content',\n              style: {\n                whiteSpace: 'normal',\n                wordBreak: 'break-all',\n                wordWrap: 'break-word'\n              }\n            }, params.row.info)]);\n          } else {\n            return h('span', params.row.info);\n          }\n        }\n      }],\n      response_columns: [{\n        title: '字段名称',\n        key: 'show_name'\n      }, {\n        title: '类型',\n        render: function render(h, params) {\n          return h('Tag', {\n            props: {\n              'color': 'blue'\n            }\n          }, _this.detail_info.dataType[params.row.data_type]);\n        }\n      }, {\n        title: '字段说明',\n        key: 'info',\n        width: 290,\n        render: function render(h, params) {\n          var text = params.row.info.substring(0, 20) + '...';\n\n          if (params.row.info.length >= 20) {\n            return h('Tooltip', {\n              props: {\n                transfer: true,\n                maxWidth: 200\n              }\n            }, [text, h('div', {\n              slot: 'content',\n              style: {\n                whiteSpace: 'normal',\n                wordBreak: 'break-all',\n                wordWrap: 'break-word'\n              }\n            }, params.row.info)]);\n          } else {\n            return h('span', params.row.info);\n          }\n        }\n      }],\n      detail_info: {},\n      api_detail: {},\n      header_data: [],\n      co: ''\n    };\n  },\n  created: function created() {\n    this.getList();\n  },\n  methods: {\n    logout: function logout() {\n      var vm = this;\n\n      _logout().then(function (response) {\n        vm.$Message.success(response.data.msg);\n        setToken('');\n        sessionStorage.removeItem('ApiAdmin_AppInfo');\n        vm.$router.push({\n          name: 'wiki_login'\n        });\n      });\n    },\n    getList: function getList() {\n      var vm = this;\n      apiGroup().then(function (response) {\n        vm.groupInfo = response.data.data.data;\n        vm.co = response.data.data.co;\n      });\n    },\n    closeDrawer: function closeDrawer() {\n      this.getList();\n    },\n    showApiDetail: function showApiDetail(hash) {\n      var vm = this;\n      vm.show_loading = true;\n      detail({\n        hash: hash\n      }).then(function (response) {\n        var res = response.data.data;\n        vm.detail_info = res;\n        vm.show_detail = true;\n        vm.show_loading = false;\n        vm.url = res.url;\n        vm.api_detail = res.apiList;\n\n        if (res.apiList.return_str) {\n          vm.code = JSON.parse(res.apiList.return_str);\n        }\n\n        vm.header_data = [{\n          is_must: res.apiList.access_token,\n          field_name: 'Access-Token',\n          info: 'APP认证秘钥【请在Header头里面传递】',\n          data_type: 2\n        }];\n      });\n    }\n  }\n};",{"version":3,"sources":["list.vue"],"names":[],"mappings":"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","sourcesContent":["<style scoped>\r\n  .line-height-16 {\r\n    line-height: 30px;\r\n  }\r\n  .url {\r\n    width: 90%;\r\n    display: inline-block;\r\n  }\r\n</style>\r\n<template>\r\n  <Layout style=\"height: 100%\">\r\n    <Menu mode=\"horizontal\" theme=\"dark\" active-name=\"list\">\r\n      <div class=\"wiki-logo\"></div>\r\n      <div class=\"wiki-nav\">\r\n        <MenuItem name=\"list\" to=\"/wiki/list\">\r\n          <Icon type=\"md-list-box\" />\r\n          接口列表\r\n        </MenuItem>\r\n        <MenuItem name=\"error\" to=\"/wiki/error\">\r\n          <Icon type=\"logo-markdown\" />\r\n          错误码\r\n        </MenuItem>\r\n        <MenuItem name=\"calculation\" to=\"/wiki/calculation\">\r\n          <Icon type=\"ios-analytics\" />\r\n          算法详解\r\n        </MenuItem>\r\n        <Submenu name=\"4\">\r\n          <template slot=\"title\">\r\n            <Icon type=\"ios-contact\" />\r\n            {{app_id}}\r\n          </template>\r\n          <MenuItem name=\"4-1\" @click.native=\"logout\">\r\n            <Icon type=\"md-exit\" />\r\n            用户登出\r\n          </MenuItem>\r\n        </Submenu>\r\n      </div>\r\n    </Menu>\r\n    <Content class=\"wiki-content-con\">\r\n      <Card class=\"margin-top-15\">\r\n        <div>\r\n          <h3 class=\"line-height-16\">接口状态说明：</h3>\r\n          <p class=\"line-height-16\"><Tag color=\"warning\">测试</Tag>系统将不过滤任何字段，也不进行AccessToken的认证，但在必要的情况下会进行UserToken的认证！</p>\r\n          <p class=\"line-height-16\"><Tag color=\"primary\">启用</Tag>系统将严格过滤请求字段，并且进行全部必要认证！</p>\r\n          <p class=\"line-height-16\"><Tag color=\"error\">禁用</Tag>系统将拒绝所有请求，一般应用于危机处理！</p>\r\n        </div>\r\n      </Card>\r\n      <div class=\"wiki-layout-con\">\r\n        <Spin size=\"large\" fix v-if=\"show_loading\"></Spin>\r\n        <Collapse>\r\n          <Panel v-bind:key=\"index\" v-for=\"(item, index) in groupInfo\" :name=\"index.toString()\">\r\n            {{item.name}}【{{item.create_time}}】 <span style=\"float: right;\" class=\"margin-right-20\">接口数量{{item.api_info ? item.api_info.length : 0}} | 项目热度{{item.hot}}</span>\r\n            <p slot=\"content\" v-if=\"item.api_info\">\r\n              <span v-bind:key=\"api_index\" v-for=\"(api_item, api_index) in item.api_info\" @click=\"showApiDetail(api_item.hash)\" style=\"cursor:pointer\">\r\n                <Alert type=\"warning\" v-if=\"api_item.method === 0\">\r\n                  <h3>/api/{{api_item.hash_type === 1 ? api_item.api_class : api_item.hash}}</h3>\r\n                  <template slot=\"desc\">\r\n                    <Tag color=\"warning\">不限</Tag>\r\n                    {{api_item.info}}\r\n                  </template>\r\n                </Alert>\r\n                <Alert v-if=\"api_item.method === 2\">\r\n                  <h3>/api/{{api_item.hash_type === 1 ? api_item.api_class : api_item.hash}}</h3>\r\n                  <template slot=\"desc\">\r\n                    <Tag color=\"primary\">GET</Tag>\r\n                    {{api_item.info}}\r\n                  </template>\r\n                </Alert>\r\n                <Alert type=\"success\" v-if=\"api_item.method === 1\">\r\n                  <h3>/api/{{api_item.hash_type === 1 ? api_item.api_class : api_item.hash}}</h3>\r\n                  <template slot=\"desc\">\r\n                    <Tag color=\"success\">POST</Tag>\r\n                    {{api_item.info}}\r\n                  </template>\r\n                </Alert>\r\n              </span>\r\n            </p>\r\n            <p slot=\"content\" v-else style=\"text-align: center\">\r\n              <span>暂无接口</span>\r\n            </p>\r\n          </Panel>\r\n        </Collapse>\r\n        <ABackTop :height=\"100\" :bottom=\"80\" :right=\"60\" container=\".wiki-layout-con\"></ABackTop>\r\n      </div>\r\n    </Content>\r\n    <Footer class=\"wiki-footer-center\">&copy; Powered  By <Tag color=\"primary\">{{co}}</Tag></Footer>\r\n    <Drawer :title=\"api_detail.info\" v-model=\"show_detail\" width=\"820\" :mask-closable=\"false\" @on-close=\"closeDrawer\">\r\n      <Tabs type=\"card\">\r\n        <TabPane label=\"接口说明\">\r\n          <Form :label-width=\"80\">\r\n            <FormItem label=\"接口地址\">\r\n              <Tag v-if=\"api_detail.method === 1\" color=\"success\">POST</Tag>\r\n              <Tag v-if=\"api_detail.method === 2\" color=\"primary\">GET</Tag>\r\n              <Tag v-if=\"api_detail.method === 0\" color=\"warning\">不限</Tag> <Alert class=\"url\">{{url}}</Alert>\r\n            </FormItem>\r\n            <FormItem label=\"请求头部\">\r\n              <Table border :columns=\"header_columns\" :data=\"header_data\"></Table>\r\n            </FormItem>\r\n            <FormItem label=\"请求参数\">\r\n              <Table border :columns=\"request_columns\" :data=\"detail_info.request\"></Table>\r\n            </FormItem>\r\n            <FormItem label=\"返回参数\">\r\n              <Table border :columns=\"response_columns\" :data=\"detail_info.response\"></Table>\r\n            </FormItem>\r\n            <FormItem label=\"返回示例\" v-if=\"code\">\r\n              <div style=\"width: 100%\" v-highlight>\r\n                <pre><code>{{code}}</code></pre>\r\n              </div>\r\n            </FormItem>\r\n          </Form>\r\n        </TabPane>\r\n        <TabPane label=\"接口测试\">\r\n          <Card style=\"width:100%\">\r\n            <div style=\"text-align:center\">\r\n              <img width=\"120px\" src=\"https://cn.vuejs.org/images/logo.png\">\r\n              <h3>在线测试功能，即将到来</h3>\r\n            </div>\r\n          </Card>\r\n        </TabPane>\r\n      </Tabs>\r\n    </Drawer>\r\n  </Layout>\r\n</template>\r\n<script>\r\nimport './list.less'\r\nimport { apiGroup, detail, logout } from '@/api/wiki'\r\nimport { setToken } from '@/libs/util'\r\nimport ABackTop from '@/components/main/components/a-back-top'\r\n\r\nexport default {\r\n  name: 'wiki',\r\n  components: {\r\n    ABackTop\r\n  },\r\n  data () {\r\n    return {\r\n      show_detail: false,\r\n      show_loading: false,\r\n      app_id: sessionStorage.getItem('ApiAdmin_AppInfo'),\r\n      code: '',\r\n      url: '',\r\n      groupInfo: [],\r\n      header_columns: [\r\n        {\r\n          title: '参数名称',\r\n          key: 'field_name'\r\n        },\r\n        {\r\n          title: '类型',\r\n          render: (h, params) => {\r\n            return h('Tag', {\r\n              props: {\r\n                'color': 'blue'\r\n              }\r\n            }, this.detail_info.dataType[params.row.data_type])\r\n          }\r\n        },\r\n        {\r\n          title: '字段状态',\r\n          render: (h, params) => {\r\n            if (params.row.is_must === 1) {\r\n              return h('Tag', {\r\n                props: {\r\n                  'color': 'red'\r\n                }\r\n              }, '复杂认证')\r\n            } else {\r\n              return h('Tag', {\r\n                props: {\r\n                  'color': 'blue'\r\n                }\r\n              }, '简易认证')\r\n            }\r\n          }\r\n        },\r\n        {\r\n          title: '字段说明',\r\n          key: 'info',\r\n          width: 290,\r\n          render: (h, params) => {\r\n            let text = params.row.info.substring(0, 20) + '...'\r\n            if (params.row.info.length >= 20) {\r\n              return h('Tooltip', {\r\n                props: {\r\n                  transfer: true,\r\n                  maxWidth: 200\r\n                }\r\n              }, [\r\n                text,\r\n                h('div', {\r\n                  slot: 'content',\r\n                  style: {\r\n                    whiteSpace: 'normal',\r\n                    wordBreak: 'break-all',\r\n                    wordWrap: 'break-word'\r\n                  }\r\n                }, params.row.info)\r\n              ])\r\n            } else {\r\n              return h('span', params.row.info)\r\n            }\r\n          }\r\n        }\r\n      ],\r\n      request_columns: [\r\n        {\r\n          title: '字段名称',\r\n          key: 'field_name'\r\n        },\r\n        {\r\n          title: '类型',\r\n          width: 100,\r\n          render: (h, params) => {\r\n            return h('Tag', {\r\n              props: {\r\n                'color': 'blue'\r\n              }\r\n            }, this.detail_info.dataType[params.row.data_type])\r\n          }\r\n        },\r\n        {\r\n          title: '字段属性',\r\n          width: 100,\r\n          render: (h, params) => {\r\n            if (params.row.is_must === 1) {\r\n              return h('Tag', {\r\n                props: {\r\n                  'color': 'red'\r\n                }\r\n              }, '必填')\r\n            } else {\r\n              return h('Tag', {\r\n                props: {\r\n                  'color': 'orange'\r\n                }\r\n              }, '选填')\r\n            }\r\n          }\r\n        },\r\n        {\r\n          title: '默认值',\r\n          key: 'default'\r\n        },\r\n        {\r\n          title: '字段说明',\r\n          key: 'info',\r\n          width: 290,\r\n          render: (h, params) => {\r\n            let text = params.row.info.substring(0, 20) + '...'\r\n            if (params.row.info.length >= 20) {\r\n              return h('Tooltip', {\r\n                props: {\r\n                  transfer: true,\r\n                  maxWidth: 200\r\n                }\r\n              }, [\r\n                text,\r\n                h('div', {\r\n                  slot: 'content',\r\n                  style: {\r\n                    whiteSpace: 'normal',\r\n                    wordBreak: 'break-all',\r\n                    wordWrap: 'break-word'\r\n                  }\r\n                }, params.row.info)\r\n              ])\r\n            } else {\r\n              return h('span', params.row.info)\r\n            }\r\n          }\r\n        }\r\n      ],\r\n      response_columns: [\r\n        {\r\n          title: '字段名称',\r\n          key: 'show_name'\r\n        },\r\n        {\r\n          title: '类型',\r\n          render: (h, params) => {\r\n            return h('Tag', {\r\n              props: {\r\n                'color': 'blue'\r\n              }\r\n            }, this.detail_info.dataType[params.row.data_type])\r\n          }\r\n        },\r\n        {\r\n          title: '字段说明',\r\n          key: 'info',\r\n          width: 290,\r\n          render: (h, params) => {\r\n            let text = params.row.info.substring(0, 20) + '...'\r\n            if (params.row.info.length >= 20) {\r\n              return h('Tooltip', {\r\n                props: {\r\n                  transfer: true,\r\n                  maxWidth: 200\r\n                }\r\n              }, [\r\n                text,\r\n                h('div', {\r\n                  slot: 'content',\r\n                  style: {\r\n                    whiteSpace: 'normal',\r\n                    wordBreak: 'break-all',\r\n                    wordWrap: 'break-word'\r\n                  }\r\n                }, params.row.info)\r\n              ])\r\n            } else {\r\n              return h('span', params.row.info)\r\n            }\r\n          }\r\n        }\r\n      ],\r\n      detail_info: {},\r\n      api_detail: {},\r\n      header_data: [],\r\n      co: ''\r\n    }\r\n  },\r\n  created () {\r\n    this.getList()\r\n  },\r\n  methods: {\r\n    logout () {\r\n      let vm = this\r\n      logout().then(response => {\r\n        vm.$Message.success(response.data.msg)\r\n        setToken('')\r\n        sessionStorage.removeItem('ApiAdmin_AppInfo')\r\n        vm.$router.push({\r\n          name: 'wiki_login'\r\n        })\r\n      })\r\n    },\r\n    getList () {\r\n      let vm = this\r\n      apiGroup().then(response => {\r\n        vm.groupInfo = response.data.data.data\r\n        vm.co = response.data.data.co\r\n      })\r\n    },\r\n    closeDrawer () {\r\n      this.getList()\r\n    },\r\n    showApiDetail (hash) {\r\n      let vm = this\r\n      vm.show_loading = true\r\n      detail({\r\n        hash: hash\r\n      }).then(response => {\r\n        let res = response.data.data\r\n        vm.detail_info = res\r\n        vm.show_detail = true\r\n        vm.show_loading = false\r\n        vm.url = res.url\r\n        vm.api_detail = res.apiList\r\n        if (res.apiList.return_str) {\r\n          vm.code = JSON.parse(res.apiList.return_str)\r\n        }\r\n        vm.header_data = [{\r\n          is_must: res.apiList.access_token,\r\n          field_name: 'Access-Token',\r\n          info: 'APP认证秘钥【请在Header头里面传递】',\r\n          data_type: 2\r\n        }]\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"sourceRoot":"src/view/wiki"}]}