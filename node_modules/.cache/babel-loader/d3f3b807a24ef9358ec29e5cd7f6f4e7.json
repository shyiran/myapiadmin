{"remainingRequest":"E:\\ApiAdmin\\node_modules\\babel-loader\\lib\\index.js!E:\\ApiAdmin\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\ApiAdmin\\src\\store\\module\\app.js","dependencies":[{"path":"E:\\ApiAdmin\\src\\store\\module\\app.js","mtime":1635783328998},{"path":"E:\\ApiAdmin\\.babelrc","mtime":1635783328909},{"path":"E:\\ApiAdmin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1635783567026},{"path":"E:\\ApiAdmin\\node_modules\\babel-loader\\lib\\index.js","mtime":1635783561745},{"path":"E:\\ApiAdmin\\node_modules\\eslint-loader\\index.js","mtime":1635783566509}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/es6.function.name\";\nimport _toConsumableArray from \"E:/ApiAdmin/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { getBreadCrumbList, setTagNavListInLocalstorage, getMenuByRouter, getTagNavListFromLocalstorage, getHomeRoute, getNextRoute, routeHasExist, routeEqual, getRouteTitleHandled, localSave, localRead } from '@/libs/util';\nimport router from '@/router';\nimport routes from '@/router/routers';\n\nvar closePage = function closePage(state, route) {\n  var nextRoute = getNextRoute(state.tagNavList, route);\n  state.tagNavList = state.tagNavList.filter(function (item) {\n    return !routeEqual(item, route);\n  });\n  router.push(nextRoute);\n};\n\nexport default {\n  state: {\n    breadCrumbList: [],\n    tagNavList: [],\n    menuList: [],\n    homeRoute: {},\n    local: localRead('local'),\n    errorList: [],\n    hasReadErrorPage: false\n  },\n  getters: {\n    menuList: function menuList(state, getters, rootState) {\n      if (state.menuList.length > 0) {\n        return getMenuByRouter(state.menuList, rootState.user.userInfo.access);\n      } else {\n        return getMenuByRouter(routes, rootState.user.userInfo.access);\n      }\n    },\n    errorCount: function errorCount(state) {\n      return state.errorList.length;\n    }\n  },\n  mutations: {\n    setBreadCrumb: function setBreadCrumb(state, route) {\n      state.breadCrumbList = getBreadCrumbList(route, state.homeRoute);\n    },\n    updateMenuList: function updateMenuList(state, r) {\n      router.addRoutes(r);\n      state.menuList = r;\n    },\n    setHomeRoute: function setHomeRoute(state, routes) {\n      state.homeRoute = getHomeRoute(routes, 'home');\n    },\n    setTagNavList: function setTagNavList(state, list) {\n      var tagList = [];\n\n      if (list) {\n        tagList = _toConsumableArray(list);\n      } else tagList = getTagNavListFromLocalstorage() || [];\n\n      if (tagList[0] && tagList[0].name !== 'home') tagList.shift();\n      var homeTagIndex = tagList.findIndex(function (item) {\n        return item.name === 'home';\n      });\n\n      if (homeTagIndex > 0) {\n        var homeTag = tagList.splice(homeTagIndex, 1)[0];\n        tagList.unshift(homeTag);\n      }\n\n      state.tagNavList = tagList;\n      setTagNavListInLocalstorage(_toConsumableArray(tagList));\n    },\n    closeTag: function closeTag(state, route) {\n      var tag = state.tagNavList.filter(function (item) {\n        return routeEqual(item, route);\n      });\n      route = tag[0] ? tag[0] : null;\n      if (!route) return;\n      closePage(state, route);\n    },\n    addTag: function addTag(state, _ref) {\n      var route = _ref.route,\n          _ref$type = _ref.type,\n          type = _ref$type === void 0 ? 'unshift' : _ref$type;\n      var router = getRouteTitleHandled(route);\n\n      if (!routeHasExist(state.tagNavList, router)) {\n        if (type === 'push') state.tagNavList.push(router);else {\n          if (router.name === 'home') state.tagNavList.unshift(router);else state.tagNavList.splice(1, 0, router);\n        }\n        setTagNavListInLocalstorage(_toConsumableArray(state.tagNavList));\n      }\n    },\n    setLocal: function setLocal(state, lang) {\n      localSave('local', lang);\n      state.local = lang;\n    },\n    addError: function addError(state, error) {\n      state.errorList.push(error);\n    }\n  }\n};",{"version":3,"sources":["E:/ApiAdmin/src/store/module/app.js"],"names":["getBreadCrumbList","setTagNavListInLocalstorage","getMenuByRouter","getTagNavListFromLocalstorage","getHomeRoute","getNextRoute","routeHasExist","routeEqual","getRouteTitleHandled","localSave","localRead","router","routes","closePage","state","route","nextRoute","tagNavList","filter","item","push","breadCrumbList","menuList","homeRoute","local","errorList","hasReadErrorPage","getters","rootState","length","user","userInfo","access","errorCount","mutations","setBreadCrumb","updateMenuList","r","addRoutes","setHomeRoute","setTagNavList","list","tagList","name","shift","homeTagIndex","findIndex","homeTag","splice","unshift","closeTag","tag","addTag","type","setLocal","lang","addError","error"],"mappings":"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","sourcesContent":["import {\r\n  getBreadCrumbList,\r\n  setTagNavListInLocalstorage,\r\n  getMenuByRouter,\r\n  getTagNavListFromLocalstorage,\r\n  getHomeRoute,\r\n  getNextRoute,\r\n  routeHasExist,\r\n  routeEqual,\r\n  getRouteTitleHandled,\r\n  localSave,\r\n  localRead\r\n} from '@/libs/util'\r\nimport router from '@/router'\r\nimport routes from '@/router/routers'\r\n\r\nconst closePage = (state, route) => {\r\n  const nextRoute = getNextRoute(state.tagNavList, route)\r\n  state.tagNavList = state.tagNavList.filter(item => {\r\n    return !routeEqual(item, route)\r\n  })\r\n  router.push(nextRoute)\r\n}\r\n\r\nexport default {\r\n  state: {\r\n    breadCrumbList: [],\r\n    tagNavList: [],\r\n    menuList: [],\r\n    homeRoute: {},\r\n    local: localRead('local'),\r\n    errorList: [],\r\n    hasReadErrorPage: false\r\n  },\r\n  getters: {\r\n    menuList: (state, getters, rootState) => {\r\n      if (state.menuList.length > 0) {\r\n        return getMenuByRouter(state.menuList, rootState.user.userInfo.access)\r\n      } else {\r\n        return getMenuByRouter(routes, rootState.user.userInfo.access)\r\n      }\r\n    },\r\n    errorCount: state => state.errorList.length\r\n  },\r\n  mutations: {\r\n    setBreadCrumb (state, route) {\r\n      state.breadCrumbList = getBreadCrumbList(route, state.homeRoute)\r\n    },\r\n    updateMenuList (state, r) {\r\n      router.addRoutes(r)\r\n      state.menuList = r\r\n    },\r\n    setHomeRoute (state, routes) {\r\n      state.homeRoute = getHomeRoute(routes, 'home')\r\n    },\r\n    setTagNavList (state, list) {\r\n      let tagList = []\r\n      if (list) {\r\n        tagList = [...list]\r\n      } else tagList = getTagNavListFromLocalstorage() || []\r\n      if (tagList[0] && tagList[0].name !== 'home') tagList.shift()\r\n      let homeTagIndex = tagList.findIndex(item => item.name === 'home')\r\n      if (homeTagIndex > 0) {\r\n        let homeTag = tagList.splice(homeTagIndex, 1)[0]\r\n        tagList.unshift(homeTag)\r\n      }\r\n      state.tagNavList = tagList\r\n      setTagNavListInLocalstorage([...tagList])\r\n    },\r\n    closeTag (state, route) {\r\n      let tag = state.tagNavList.filter(item => routeEqual(item, route))\r\n      route = tag[0] ? tag[0] : null\r\n      if (!route) return\r\n      closePage(state, route)\r\n    },\r\n    addTag (state, { route, type = 'unshift' }) {\r\n      let router = getRouteTitleHandled(route)\r\n      if (!routeHasExist(state.tagNavList, router)) {\r\n        if (type === 'push') state.tagNavList.push(router)\r\n        else {\r\n          if (router.name === 'home') state.tagNavList.unshift(router)\r\n          else state.tagNavList.splice(1, 0, router)\r\n        }\r\n        setTagNavListInLocalstorage([...state.tagNavList])\r\n      }\r\n    },\r\n    setLocal (state, lang) {\r\n      localSave('local', lang)\r\n      state.local = lang\r\n    },\r\n    addError (state, error) {\r\n      state.errorList.push(error)\r\n    }\r\n  }\r\n}\r\n"]}]}