{"remainingRequest":"E:\\ApiAdmin\\node_modules\\thread-loader\\dist\\cjs.js!E:\\ApiAdmin\\node_modules\\babel-loader\\lib\\index.js!E:\\ApiAdmin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\ApiAdmin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\ApiAdmin\\src\\view\\app\\list.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\ApiAdmin\\src\\view\\app\\list.vue","mtime":1635783329002},{"path":"E:\\ApiAdmin\\.babelrc","mtime":1635783328909},{"path":"E:\\ApiAdmin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1635783567026},{"path":"E:\\ApiAdmin\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1635783565708},{"path":"E:\\ApiAdmin\\node_modules\\babel-loader\\lib\\index.js","mtime":1635783561745},{"path":"E:\\ApiAdmin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1635783567026},{"path":"E:\\ApiAdmin\\node_modules\\vue-loader\\lib\\index.js","mtime":1635783560295}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getList as _getList, changeStatus, add, edit, del, getAppInfo, refreshAppSecretApi } from '@/api/app';\nimport { getAll } from '@/api/app-group';\n\nvar editButton = function editButton(vm, h, currentRow, index) {\n  if (vm.buttonShow.edit) {\n    return h('Button', {\n      props: {\n        type: 'primary'\n      },\n      style: {\n        margin: '0 5px'\n      },\n      on: {\n        'click': function click() {\n          getAll().then(function (response) {\n            vm.appGroup = response.data.data.list;\n            vm.formItem.id = currentRow.id;\n            vm.formItem.app_name = currentRow.app_name;\n            vm.formItem.app_info = currentRow.app_info;\n            vm.formItem.app_id = currentRow.app_id;\n            vm.formItem.app_secret = currentRow.app_secret;\n            vm.formItem.app_group = currentRow.app_group;\n            getAppInfo(currentRow.id).then(function (response) {\n              var res = response.data;\n              vm.groupInfo = res.data.groupInfo;\n              vm.groupList = res.data.apiList;\n\n              for (var _index in vm.groupInfo) {\n                if (res.data.app_detail === null || typeof res.data.app_detail[_index] === 'undefined') {\n                  vm.$set(vm.checkAllStatus, _index, false);\n                  vm.$set(vm.checkAllIndeterminate, _index, false);\n                  vm.$set(vm.formItem.app_api, _index, []);\n                } else {\n                  var hasLength = res.data.app_detail[_index].length;\n\n                  if (hasLength === 0) {\n                    vm.$set(vm.checkAllStatus, _index, false);\n                    vm.$set(vm.checkAllIndeterminate, _index, false);\n                    vm.$set(vm.formItem.app_api, _index, []);\n                  } else if (vm.groupList[_index].length === hasLength) {\n                    vm.$set(vm.checkAllStatus, _index, true);\n                    vm.$set(vm.checkAllIndeterminate, _index, false);\n                    vm.$set(vm.formItem.app_api, _index, res.data.app_detail[_index]);\n                  } else {\n                    vm.$set(vm.checkAllStatus, _index, false);\n                    vm.$set(vm.checkAllIndeterminate, _index, true);\n                    vm.$set(vm.formItem.app_api, _index, res.data.app_detail[_index]);\n                  }\n                }\n              }\n            });\n            vm.modalSetting.show = true;\n            vm.modalSetting.index = index;\n          });\n        }\n      }\n    }, vm.$t('edit_button'));\n  }\n};\n\nvar deleteButton = function deleteButton(vm, h, currentRow, index) {\n  if (vm.buttonShow.del) {\n    return h('Poptip', {\n      props: {\n        confirm: true,\n        title: '您确定要删除这条数据吗? ',\n        transfer: true\n      },\n      on: {\n        'on-ok': function onOk() {\n          del(currentRow.id).then(function (response) {\n            vm.tableData.splice(index, 1);\n            vm.$Message.success(response.data.msg);\n          });\n          currentRow.loading = false;\n        }\n      }\n    }, [h('Button', {\n      style: {\n        margin: '0 5px'\n      },\n      props: {\n        type: 'error',\n        placement: 'top',\n        loading: currentRow.isDeleting\n      }\n    }, vm.$t('delete_button'))]);\n  }\n};\n\nexport default {\n  name: 'interface_list',\n  data: function data() {\n    var _this = this;\n\n    return {\n      appGroup: [],\n      columnsList: [{\n        title: '序号',\n        type: 'index',\n        width: 65,\n        align: 'center'\n      }, {\n        title: '应用名称',\n        align: 'center',\n        key: 'app_name',\n        minWidth: 130\n      }, {\n        title: 'AppId',\n        align: 'center',\n        key: 'app_id',\n        width: 120\n      }, {\n        title: 'AppSecret',\n        align: 'center',\n        key: 'app_secret',\n        width: 310\n      }, {\n        title: '应用说明',\n        align: 'center',\n        key: 'app_info',\n        width: 160\n      }, {\n        title: '应用状态',\n        align: 'center',\n        width: 100,\n        render: function render(h, params) {\n          var vm = _this;\n          return h('i-switch', {\n            attrs: {\n              size: 'large'\n            },\n            props: {\n              'true-value': 1,\n              'false-value': 0,\n              value: params.row.app_status,\n              disabled: !vm.buttonShow.changeStatus\n            },\n            on: {\n              'on-change': function onChange(status) {\n                changeStatus(status, params.row.id).then(function (response) {\n                  vm.$Message.success(response.data.msg);\n                  vm.getList();\n                });\n              }\n            }\n          }, [h('span', {\n            slot: 'open'\n          }, vm.$t('open_choose')), h('span', {\n            slot: 'close'\n          }, vm.$t('close_choose'))]);\n        }\n      }, {\n        title: '操作',\n        align: 'center',\n        width: 200,\n        render: function render(h, params) {\n          return h('div', [editButton(_this, h, params.row, params.index), deleteButton(_this, h, params.row, params.index)]);\n        }\n      }],\n      tableData: [],\n      groupInfo: {},\n      groupList: {},\n      tableShow: {\n        currentPage: 1,\n        pageSize: 10,\n        listCount: 0\n      },\n      searchConf: {\n        type: '',\n        keywords: '',\n        status: ''\n      },\n      modalSetting: {\n        show: false,\n        loading: false,\n        index: 0\n      },\n      formItem: {\n        app_name: '',\n        app_id: '',\n        app_secret: '',\n        app_info: '',\n        app_api: {},\n        app_group: 'default',\n        id: 0\n      },\n      ruleValidate: {\n        app_name: [{\n          required: true,\n          message: '应用名称不能为空',\n          trigger: 'blur'\n        }]\n      },\n      checkAllStatus: {},\n      checkAllIndeterminate: {},\n      buttonShow: {\n        edit: true,\n        del: true,\n        changeStatus: true\n      },\n      listLoading: false\n    };\n  },\n  created: function created() {\n    var vm = this;\n    vm.getList();\n    vm.hasRule('App/edit').then(function (res) {\n      vm.buttonShow.edit = res;\n    });\n    vm.hasRule('App/del').then(function (res) {\n      vm.buttonShow.del = res;\n    });\n    vm.hasRule('App/changeStatus').then(function (res) {\n      vm.buttonShow.changeStatus = res;\n    });\n  },\n  methods: {\n    alertAdd: function alertAdd() {\n      var vm = this;\n      getAll().then(function (response) {\n        vm.appGroup = response.data.data.list;\n      });\n      getAppInfo().then(function (response) {\n        var res = response.data;\n        vm.formItem.app_id = res.data.app_id;\n        vm.formItem.app_secret = res.data.app_secret;\n        vm.groupInfo = res.data.groupInfo;\n        vm.groupList = res.data.apiList;\n\n        for (var index in vm.groupInfo) {\n          vm.$set(vm.checkAllStatus, index, false);\n          vm.$set(vm.checkAllIndeterminate, index, false);\n          vm.$set(vm.formItem.app_api, index, []);\n        }\n      });\n      vm.modalSetting.show = true;\n    },\n    submit: function submit() {\n      var vm = this;\n      vm.$refs['myForm'].validate(function (valid) {\n        if (valid) {\n          vm.modalSetting.loading = true;\n\n          if (vm.formItem.id === 0) {\n            add(vm.formItem).then(function (response) {\n              vm.$Message.success(response.data.msg);\n              vm.getList();\n              vm.cancel();\n            }).catch(function () {\n              vm.modalSetting.loading = false;\n            });\n          } else {\n            edit(vm.formItem).then(function (response) {\n              vm.$Message.success(response.data.msg);\n              vm.getList();\n              vm.cancel();\n            }).catch(function () {\n              vm.modalSetting.loading = false;\n            });\n          }\n        }\n      });\n    },\n    cancel: function cancel() {\n      this.formItem.id = 0;\n      this.$refs['myForm'].resetFields();\n      this.modalSetting.show = false;\n      this.modalSetting.loading = false;\n      this.modalSetting.index = 0;\n    },\n    changePage: function changePage(page) {\n      this.tableShow.currentPage = page;\n      this.getList();\n    },\n    changeSize: function changeSize(size) {\n      this.tableShow.pageSize = size;\n      this.getList();\n    },\n    handleCheckAll: function handleCheckAll(groupId) {\n      if (this.checkAllStatus[groupId]) {\n        this.checkAllStatus[groupId] = false;\n      } else {\n        this.checkAllStatus[groupId] = !this.checkAllStatus[groupId];\n      }\n\n      this.checkAllIndeterminate[groupId] = false;\n\n      if (this.checkAllStatus[groupId]) {\n        var vm = this;\n        this.groupList[groupId].forEach(function (item) {\n          vm.formItem.app_api[groupId].push(item.hash);\n        });\n      } else {\n        this.formItem.app_api[groupId] = [];\n      }\n    },\n    checkAllGroupChange: function checkAllGroupChange(groupId) {\n      if (this.formItem.app_api[groupId].length === this.groupList[groupId].length) {\n        this.checkAllIndeterminate[groupId] = false;\n        this.checkAllStatus[groupId] = true;\n      } else if (this.formItem.app_api[groupId].length > 0) {\n        this.checkAllIndeterminate[groupId] = true;\n        this.checkAllStatus[groupId] = false;\n      } else {\n        this.checkAllIndeterminate[groupId] = false;\n        this.checkAllStatus[groupId] = false;\n      }\n    },\n    search: function search() {\n      this.tableShow.currentPage = 1;\n      this.getList();\n    },\n    refreshAppSecret: function refreshAppSecret() {\n      var vm = this;\n      refreshAppSecretApi().then(function (response) {\n        vm.formItem.app_secret = response.data.data.app_secret;\n      });\n    },\n    getList: function getList() {\n      var vm = this;\n      vm.listLoading = true;\n\n      _getList({\n        page: vm.tableShow.currentPage,\n        size: vm.tableShow.pageSize,\n        type: vm.searchConf.type,\n        keywords: vm.searchConf.keywords,\n        status: vm.searchConf.status\n      }).then(function (response) {\n        vm.tableData = response.data.data.list;\n        vm.tableShow.listCount = response.data.data.count;\n        vm.listLoading = false;\n      });\n    },\n    doCancel: function doCancel(data) {\n      if (!data) {\n        this.formItem.id = 0;\n        this.$refs['myForm'].resetFields();\n        this.modalSetting.loading = false;\n        this.modalSetting.index = 0;\n      }\n    }\n  }\n};",null]}