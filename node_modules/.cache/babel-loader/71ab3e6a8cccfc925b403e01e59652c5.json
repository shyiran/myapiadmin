{"remainingRequest":"E:\\ApiAdmin\\node_modules\\thread-loader\\dist\\cjs.js!E:\\ApiAdmin\\node_modules\\babel-loader\\lib\\index.js!E:\\ApiAdmin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\ApiAdmin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\ApiAdmin\\src\\view\\system\\auth.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\ApiAdmin\\src\\view\\system\\auth.vue","mtime":1635783329023},{"path":"E:\\ApiAdmin\\.babelrc","mtime":1635783328909},{"path":"E:\\ApiAdmin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1635783567026},{"path":"E:\\ApiAdmin\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1635783565708},{"path":"E:\\ApiAdmin\\node_modules\\babel-loader\\lib\\index.js","mtime":1635783561745},{"path":"E:\\ApiAdmin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1635783567026},{"path":"E:\\ApiAdmin\\node_modules\\vue-loader\\lib\\index.js","mtime":1635783560295}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getUsers } from '@/api/user';\nimport { getList as _getList, add, edit, del, delMember, getRuleList, changeStatus, editRule } from '@/api/auth';\n\nvar editButton = function editButton(vm, h, currentRow, index) {\n  if (vm.buttonShow.edit) {\n    return h('Button', {\n      props: {\n        type: 'primary'\n      },\n      style: {\n        margin: '0 5px'\n      },\n      on: {\n        'click': function click() {\n          vm.formItem.id = currentRow.id;\n          vm.formItem.name = currentRow.name;\n          vm.formItem.description = currentRow.description;\n          vm.modalSetting.show = true;\n          vm.modalSetting.index = index;\n        }\n      }\n    }, vm.$t('edit_button'));\n  }\n};\n\nvar authButton = function authButton(vm, h, currentRow, index) {\n  if (vm.buttonShow.edit) {\n    return h('Button', {\n      props: {\n        type: 'info',\n        ghost: true\n      },\n      style: {\n        margin: '0 5px'\n      },\n      on: {\n        'click': function click() {\n          vm.formItem.id = currentRow.id;\n          getRuleList({\n            'group_id': currentRow.id\n          }).then(function (response) {\n            vm.ruleList = response.data.data.list;\n          });\n          vm.authSetting.show = true;\n          vm.authSetting.index = index;\n        }\n      }\n    }, '设置权限');\n  }\n};\n\nvar deleteButton = function deleteButton(vm, h, currentRow, index) {\n  if (vm.buttonShow.del) {\n    return h('Poptip', {\n      props: {\n        confirm: true,\n        title: '您确定要删除这条数据吗? ',\n        transfer: true\n      },\n      on: {\n        'on-ok': function onOk() {\n          del(currentRow.id).then(function (response) {\n            vm.tableData.splice(index, 1);\n            vm.$Message.success(response.data.msg);\n          });\n        }\n      }\n    }, [h('Button', {\n      style: {\n        margin: '0 5px'\n      },\n      props: {\n        type: 'error',\n        placement: 'top',\n        loading: currentRow.isDeleting\n      }\n    }, vm.$t('delete_button'))]);\n  }\n};\n\nvar memberButton = function memberButton(vm, h, currentRow, index) {\n  if (vm.buttonShow.memberList) {\n    return h('Button', {\n      props: {\n        type: 'primary'\n      },\n      style: {\n        margin: '0 5px'\n      },\n      on: {\n        'click': function click() {\n          vm.memberSetting.show = true;\n          vm.memberShow.gid = currentRow.id;\n          vm.getMemberList();\n        }\n      }\n    }, '组成员');\n  }\n};\n\nvar memberDelButton = function memberDelButton(vm, h, currentRow, index) {\n  if (vm.buttonShow.memberDel) {\n    return h('Poptip', {\n      props: {\n        confirm: true,\n        title: '您确定要删除这条数据吗? ',\n        transfer: true\n      },\n      on: {\n        'on-ok': function onOk() {\n          delMember({\n            uid: currentRow.id,\n            gid: vm.memberShow.gid\n          }).then(function (response) {\n            vm.memberData.splice(index, 1);\n            vm.$Message.success(response.data.msg);\n          });\n        }\n      }\n    }, [h('Button', {\n      style: {\n        margin: '0 5px'\n      },\n      props: {\n        type: 'error',\n        placement: 'top',\n        loading: currentRow.isDeleting\n      }\n    }, vm.$t('delete_button'))]);\n  }\n};\n\nexport default {\n  name: 'system_auth',\n  data: function data() {\n    var _this = this;\n\n    return {\n      ruleList: [],\n      columnsList: [{\n        title: '序号',\n        type: 'index',\n        width: 65,\n        align: 'center'\n      }, {\n        title: '权限组',\n        align: 'center',\n        key: 'name',\n        width: 200\n      }, {\n        title: '描述',\n        align: 'center',\n        key: 'description'\n      }, {\n        title: '成员授权',\n        align: 'center',\n        width: 116,\n        render: function render(h, params) {\n          return h('div', [memberButton(_this, h, params.row, params.index)]);\n        }\n      }, {\n        title: '状态',\n        align: 'center',\n        width: 100,\n        render: function render(h, params) {\n          var vm = _this;\n          return h('i-switch', {\n            attrs: {\n              size: 'large'\n            },\n            props: {\n              'true-value': 1,\n              'false-value': 0,\n              value: params.row.status,\n              disabled: !vm.buttonShow.changeStatus\n            },\n            on: {\n              'on-change': function onChange(status) {\n                changeStatus(status, params.row.id).then(function (response) {\n                  vm.$Message.success(response.data.msg);\n                  vm.getList();\n                });\n              }\n            }\n          }, [h('span', {\n            slot: 'open'\n          }, vm.$t('open_choose')), h('span', {\n            slot: 'close'\n          }, vm.$t('close_choose'))]);\n        }\n      }, {\n        title: '操作',\n        align: 'center',\n        width: 285,\n        render: function render(h, params) {\n          return h('div', [authButton(_this, h, params.row, params.index), editButton(_this, h, params.row, params.index), deleteButton(_this, h, params.row, params.index)]);\n        }\n      }],\n      memberColumns: [{\n        title: '序号',\n        type: 'index',\n        width: 65,\n        align: 'center'\n      }, {\n        title: '用户账号',\n        align: 'center',\n        key: 'username'\n      }, {\n        title: '用户昵称',\n        align: 'center',\n        key: 'nickname',\n        width: 100\n      }, {\n        title: '登录次数',\n        align: 'center',\n        key: 'login_times',\n        width: 100\n      }, {\n        title: '最后登录时间',\n        align: 'center',\n        key: 'last_login_time',\n        width: 140\n      }, {\n        title: '最后登录IP',\n        align: 'center',\n        key: 'last_login_ip',\n        width: 160\n      }, {\n        title: '状态',\n        align: 'center',\n        width: 100,\n        render: function render(h, params) {\n          if (params.row.status === 1) {\n            return h('Tag', {\n              props: {\n                'color': 'green'\n              }\n            }, '启用');\n          } else {\n            return h('Tag', {\n              props: {\n                'color': 'red'\n              }\n            }, vm.$t('close_choose'));\n          }\n        }\n      }, {\n        title: '操作',\n        align: 'center',\n        width: 115,\n        render: function render(h, params) {\n          return h('div', [memberDelButton(_this, h, params.row, params.index)]);\n        }\n      }],\n      tableData: [],\n      memberData: [],\n      tableShow: {\n        currentPage: 1,\n        pageSize: 10,\n        listCount: 0\n      },\n      memberShow: {\n        currentPage: 1,\n        pageSize: 10,\n        listCount: 0,\n        gid: 0\n      },\n      searchConf: {\n        keywords: '',\n        status: ''\n      },\n      modalSetting: {\n        show: false,\n        loading: false,\n        index: 0\n      },\n      authSetting: {\n        show: false,\n        loading: false,\n        index: 0\n      },\n      memberSetting: {\n        show: false,\n        loading: false,\n        index: 0\n      },\n      formItem: {\n        name: '',\n        description: '',\n        rules: [],\n        id: 0\n      },\n      ruleValidate: {\n        name: [{\n          required: true,\n          message: '组名称不能为空',\n          trigger: 'blur'\n        }]\n      },\n      buttonShow: {\n        edit: true,\n        del: true,\n        changeStatus: true,\n        memberDel: true,\n        memberList: true\n      },\n      listLoading: false,\n      memberLoading: false\n    };\n  },\n  created: function created() {\n    var vm = this;\n    vm.getList();\n    vm.hasRule('Auth/edit').then(function (res) {\n      vm.buttonShow.edit = res;\n    });\n    vm.hasRule('Auth/del').then(function (res) {\n      vm.buttonShow.del = res;\n    });\n    vm.hasRule('Auth/changeStatus').then(function (res) {\n      vm.buttonShow.changeStatus = res;\n    });\n    vm.hasRule('User/getUsers').then(function (res) {\n      vm.buttonShow.memberList = res;\n    });\n    vm.hasRule('Auth/delMember').then(function (res) {\n      vm.buttonShow.memberDel = res;\n    });\n  },\n  methods: {\n    authEdit: function authEdit() {\n      var vm = this;\n      vm.formItem.rules = [];\n      var ruleNodes = vm.$refs['formTree'].getCheckedNodes();\n      var ruleLength = ruleNodes.length;\n\n      if (ruleLength) {\n        for (var i = 0; i <= ruleLength - 1; i++) {\n          this.formItem.rules.push(ruleNodes[i]['key']);\n        }\n      }\n\n      vm.authSetting.loading = true;\n      editRule(vm.formItem).then(function (response) {\n        vm.$Message.success(response.data.msg);\n        vm.authSetting.show = false;\n        vm.authSetting.loading = false;\n      }).catch(function () {\n        vm.authSetting.loading = false;\n      });\n    },\n    alertAdd: function alertAdd() {\n      this.modalSetting.show = true;\n    },\n    submit: function submit() {\n      var vm = this;\n      this.$refs['myForm'].validate(function (valid) {\n        if (valid) {\n          vm.modalSetting.loading = true;\n\n          if (vm.formItem.id === 0) {\n            add(vm.formItem).then(function (response) {\n              vm.$Message.success(response.data.msg);\n              vm.getList();\n              vm.cancel();\n            }).catch(function () {\n              vm.modalSetting.loading = false;\n            });\n          } else {\n            edit(vm.formItem).then(function (response) {\n              vm.$Message.success(response.data.msg);\n              vm.getList();\n              vm.cancel();\n            }).catch(function () {\n              vm.modalSetting.loading = false;\n            });\n          }\n        }\n      });\n    },\n    cancel: function cancel() {\n      this.modalSetting.show = false;\n    },\n    doCancel: function doCancel(data) {\n      if (!data) {\n        this.formItem.id = 0;\n        this.$refs['myForm'].resetFields();\n        this.modalSetting.loading = false;\n        this.modalSetting.index = 0;\n      }\n    },\n    changePage: function changePage(page) {\n      this.tableShow.currentPage = page;\n      this.getList();\n    },\n    changeSize: function changeSize(size) {\n      this.tableShow.pageSize = size;\n      this.getList();\n    },\n    changeMemberPage: function changeMemberPage(page) {\n      this.memberShow.currentPage = page;\n      this.getMemberList();\n    },\n    changeMemberSize: function changeMemberSize(size) {\n      this.memberShow.pageSize = size;\n      this.getMemberList();\n    },\n    search: function search() {\n      this.tableShow.currentPage = 1;\n      this.getList();\n    },\n    getList: function getList() {\n      var vm = this;\n      var params = {\n        page: vm.tableShow.currentPage,\n        size: vm.tableShow.pageSize,\n        keywords: vm.searchConf.keywords,\n        status: vm.searchConf.status\n      };\n      vm.listLoading = true;\n\n      _getList(params).then(function (response) {\n        vm.tableData = response.data.data.list;\n        vm.tableShow.listCount = response.data.data.count;\n        vm.listLoading = false;\n      });\n    },\n    getMemberList: function getMemberList() {\n      var vm = this;\n      var params = {\n        page: vm.memberShow.currentPage,\n        size: vm.memberShow.pageSize,\n        gid: vm.memberShow.gid\n      };\n      vm.memberLoading = true;\n      getUsers(params).then(function (response) {\n        vm.memberData = response.data.data.list;\n        vm.memberShow.listCount = response.data.data.count;\n        vm.memberLoading = false;\n      });\n    }\n  }\n};",null]}