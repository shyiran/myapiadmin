{"remainingRequest":"E:\\ApiAdmin\\node_modules\\thread-loader\\dist\\cjs.js!E:\\ApiAdmin\\node_modules\\babel-loader\\lib\\index.js!E:\\ApiAdmin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\ApiAdmin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\ApiAdmin\\src\\view\\login\\login.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\ApiAdmin\\src\\view\\login\\login.vue","mtime":1635783329014},{"path":"E:\\ApiAdmin\\.babelrc","mtime":1635783328909},{"path":"E:\\ApiAdmin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1635783567026},{"path":"E:\\ApiAdmin\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1635783565708},{"path":"E:\\ApiAdmin\\node_modules\\babel-loader\\lib\\index.js","mtime":1635783561745},{"path":"E:\\ApiAdmin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1635783567026},{"path":"E:\\ApiAdmin\\node_modules\\vue-loader\\lib\\index.js","mtime":1635783560295}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"E:/ApiAdmin/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapActions } from 'vuex';\nimport { loginByQQ, wx, getQQCode, getQr, checkWxLogin, getWxCode } from '@/api/third-login';\nimport qq_login from '@/assets/images/qq-login.png';\nimport wx_login from '@/assets/images/wx-login.png';\nimport { filterAsyncRouter } from '@/libs/router-utils';\nexport default {\n  data: function data() {\n    return {\n      qq_login: qq_login,\n      wx_login: wx_login,\n      form: {\n        username: '',\n        password: ''\n      },\n      rules: {\n        username: [{\n          required: true,\n          message: '账号不能为空',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '密码不能为空',\n          trigger: 'blur'\n        }]\n      },\n      wxQrModel: false,\n      wxQrUrl: '',\n      loading: false\n    };\n  },\n  created: function created() {\n    var p = this.$route.params.loginType;\n    var q = this.$route.query;\n\n    if (p) {\n      this.$Spin.show();\n      var vm = this;\n\n      switch (p) {\n        case 'qq':\n          loginByQQ(q).then(function (response) {\n            vm.$Spin.hide();\n            vm.$store.commit('setUserInfo', response.data.data);\n            vm.$store.commit('setToken', response.data.data.apiAuth);\n            vm.$store.commit('updateMenuList', filterAsyncRouter(response.data.data.menu));\n            sessionStorage.setItem('dynamicRouter', JSON.stringify(response.data.data.menu));\n            sessionStorage.setItem('ApiAdmin_AppInfo', '管理员');\n            vm.$router.push({\n              name: 'home'\n            });\n          });\n          break;\n\n        case 'wx':\n          wx(q).then(function (response) {\n            vm.$Spin.hide();\n            vm.$store.commit('setUserInfo', response.data.data);\n            vm.$store.commit('setToken', response.data.data.apiAuth);\n            vm.$store.commit('updateMenuList', filterAsyncRouter(response.data.data.menu));\n            sessionStorage.setItem('dynamicRouter', JSON.stringify(response.data.data.menu));\n            sessionStorage.setItem('ApiAdmin_AppInfo', '管理员');\n            vm.$router.push({\n              name: 'home'\n            });\n          });\n          break;\n\n        default:\n          this.$Spin.hide();\n          break;\n      }\n    }\n  },\n  methods: _objectSpread(_objectSpread({}, mapActions(['handleLogin'])), {}, {\n    handleSubmit: function handleSubmit() {\n      var vm = this;\n      var username = vm.form.username;\n      var password = vm.form.password;\n      vm.$refs.loginForm.validate(function (valid) {\n        if (valid) {\n          vm.loading = true;\n          vm.handleLogin({\n            username: username,\n            password: password\n          }).then(function () {\n            sessionStorage.setItem('ApiAdmin_AppInfo', '管理员');\n            vm.$router.push({\n              name: 'home'\n            });\n            vm.loading = false;\n          }).catch(function () {\n            vm.loading = false;\n          });\n        }\n      });\n    },\n    qqLogin: function qqLogin() {\n      getQQCode().then(function (response) {\n        window.location.href = 'https://graph.qq.com/oauth2.0/authorize?response_type=code&client_id=' + response.data.data.appId + '&redirect_uri=' + response.data.data.redirectUri + '&response_type=code&state=' + response.data.data.state;\n      });\n    },\n    wxLoginBak: function wxLoginBak() {\n      var vm = this;\n      vm.wxQrModel = true;\n      getQr().then(function (response) {\n        vm.wxQrUrl = response.data.data.qrUrl;\n        var checkWx = setInterval(function () {\n          checkWxLogin({\n            state: response.data.data.state\n          }).then(function (res) {\n            if (res.data.code === 1) {\n              vm.$store.commit('setUserInfo', res.data.data);\n              vm.$store.commit('setToken', res.data.data.apiAuth);\n              vm.$Message.success(res.data.msg);\n              vm.$router.push({\n                name: 'home'\n              });\n              clearInterval(checkWx);\n            }\n          }).catch(function () {\n            clearInterval(checkWx);\n          });\n        }, 3000);\n      });\n    },\n    wxLogin: function wxLogin() {\n      getWxCode().then(function (response) {\n        window.location.href = 'https://open.weixin.qq.com/connect/qrconnect?appid=' + response.data.data.appId + '&redirect_uri=' + response.data.data.redirectUri + '&response_type=code&scope=snsapi_login&state=' + response.data.data.state + '#wechat_redirect';\n      });\n    }\n  })\n};",null]}